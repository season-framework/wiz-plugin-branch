[{"dic":{"default":{}},"id":"core.branch.commit","name":"/commit","compile_html":"on","compile_css":"off","compile_js":"on","controller":"wiz = framework.model(\"wiz\")\n\nbranch = framework.request.segment.branch\nif branch is None: branch = wiz.workspace.branch()\n\nkwargs['IS_DEV'] = wiz.is_dev()\nkwargs['author'] = wiz.workspace.author(branch)\nkwargs['BRANCH'] = branch\nkwargs['BRANCHES'] = wiz.workspace.branches()\nkwargs['TARGET_BRANCH'] = branch","css":".main-header {\n    .container {\n        margin: 0 auto;\n        max-width: 720px;\n        padding-top: 88px;\n        padding-bottom: 96px;\n        color: white;\n    }\n\n    .subtitle {\n        font-size: 24px;\n        color: rgba(255, 255, 255, .6);\n    }\n\n    .title {\n        font-size: 40px;\n    }\n\n    .input-group {\n        .form-control {\n            border: 0;\n            // border-radius: 0;\n            padding: 16px;\n            font-size: 16px;\n            color: black;\n        }\n\n        .btn {\n            border: 0;\n            box-shadow: none;\n            border-radius: 0;\n            background: #ff922b;\n            color: white;\n            font-size: 20px;\n        }\n    }\n\n    .icon-menu {\n        padding: 18px 0;\n        color: white;\n\n        &:hover {\n            cursor: pointer;\n            background-color: #ff922b;\n        }\n\n        .main-icon {\n            height: 80px;\n\n        }\n\n        img {\n            width: 80px;\n            height: 80px;\n        }\n    }\n}\n\n.card {\n\n    h2,\n    h3 {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n}\n\n.card-hover:hover {\n    background: rgba(255, 146, 43, .2);\n    cursor: pointer;\n}\n\n.card-statistic {\n    img {\n        margin-top: 12px;\n        margin-bottom: 12px;\n        width: 36px;\n        height: 36px;\n    }\n}\n\n.page {\n    background: white;\n}\n\n@media all and (min-width:721px) {}\n\n.container {\n    max-width: 960px;\n}\n\n\n.filetree {\n    .title {\n        cursor: pointer;\n    }\n\n    .title:hover {\n        background: rgba(255, 255, 255, .1);\n    }\n\n    .title.active {\n        background: rgba(255, 255, 255, .2);\n    }\n\n    .sub {\n        padding-left: 16px;\n    }\n}\n\n@media (min-width:769px) {\n    html, body {\n        overflow: hidden;\n    }\n    .panel-layout {\n        padding-top: 64px;\n    }\n    .panel-layout .panel-menu {\n        position: fixed;\n        width: 360px;\n        height: 100%;\n        top: 0;\n        left: 0;\n        padding-top: 64px;\n        overflow: auto;\n        z-index: 1001;\n    }\n    .panel-layout .panel-submenu {\n        position: fixed;\n        width: 0;\n        height: 100%;\n        top: 0;\n        left: 360px;\n        padding-top: 64px;\n        overflow: auto;\n        z-index: 1001;\n    }\n    .panel-layout .panel-context {\n        padding-left: 360px;\n        height: 100%;\n    }\n    .fixed-top#top-nav .container-xl {\n        max-width: none;\n    }\n    /* side menu off */\n    .sidemenu-off .panel-menu {\n        width: 76px;\n    }\n    .sidemenu-off .panel-menu .menu-layout {\n        padding: 0 !important;\n    }\n    .sidemenu-off .panel-menu h3 {\n        text-align: center;\n    }\n    .sidemenu-off .panel-menu h3 i {\n        padding: 16px !important;\n    }\n    .sidemenu-off .panel-menu .minify {\n        display: none;\n    }\n    .sidemenu-off .panel-menu .layout-selector {\n        padding: 4px !important;\n    }\n    .sidemenu-off .button-container {\n        padding: 0 8px;\n    }\n    .sidemenu-off .panel-context {\n        padding-left: 76px;\n        height: 100%;\n    }\n}\n\n.layout-icon {\n    display: inline-table;\n    width: 60px;\n    height: 60px;\n    border: 2px solid #ffffff;\n    border-radius: 10%;\n}\n\n.layout-icon .layout-row, .layout-icon .layout-column {\n    height: 60px;\n}\n\n.layout-icon.rows-2 .layout-row, .layout-icon.rows-2 .layout-column {\n    height: 30px;\n}\n\n.layout-icon .layout-row {\n    display: table-row;\n}\n\n.layout-icon .layout-row .layout-column {\n    border-bottom: 2px solid #ffffff;\n}\n\n.layout-icon .layout-row:last-child .layout-column {\n    border-bottom-color: transparent;\n}\n\n.layout-icon .layout-column {\n    display: table-cell;\n    border-right: 2px solid #ffffff;\n}\n\n.layout-icon .layout-column:last-child {\n    border-right-color: transparent;\n}\n\n.layout-selector {\n    display: inline-block;\n    line-height: 0;\n    border-radius: 10%;\n    cursor: pointer;\n}\n\n.layout-selector:hover, .layout-selector.active {\n    background: #ffffff;\n}\n\n.layout-selector:hover .layout-icon, .layout-selector.active .layout-icon {\n    border-color: #354052;\n}\n\n.layout-selector:hover .layout-icon .layout-row, .layout-selector.active .layout-icon .layout-row {\n    display: table-row;\n}\n\n.layout-selector:hover .layout-icon .layout-row .layout-column, .layout-selector.active .layout-icon .layout-row .layout-column {\n    border-bottom: 2px solid #354052;\n}\n\n.layout-selector:hover .layout-icon .layout-row:last-child .layout-column, .layout-selector.active .layout-icon .layout-row:last-child .layout-column {\n    border-bottom-color: transparent;\n}\n\n.layout-selector:hover .layout-icon .layout-column, .layout-selector.active .layout-icon .layout-column {\n    display: table-cell;\n    border-right: 2px solid #354052;\n}\n\n.layout-selector:hover .layout-icon .layout-column:last-child, .layout-selector.active .layout-icon .layout-column:last-child {\n    border-right-color: transparent;\n}\n\n.code-tabs tr, .code-tabs td {\n    border: none;\n    padding: 0;\n}\n\n.fixed-top#top-nav .container-xl {\n    max-width: none;\n}\n\n.code-table {\n    table-layout: fixed;\n}\n\n.code-table td {\n    /* border-right: 1px solid rgba(110, 117, 130, .2); */\n}\n\n.code-table td.gutter {\n    width: 1px;\n    background: rgba(110, 117, 130, .2);\n    cursor: col-resize;\n}\n\n.code-table tr.gutter {\n    width: 1px;\n    background: rgba(110, 117, 130, .2);\n    cursor: row-resize;\n}\n\n.code-table .code-tr td {\n    height: calc(50vh - 104px + 54px - 15px);\n    overflow: hidden;\n    vertical-align: top;\n}\n\n.code-table .code-tr td .code-input {\n    height: calc(50vh - 104px + 54px - 16px);\n    overflow: hidden;\n}\n\n.code-table .code-tr td .code-input .CodeMirror {\n    height: calc(50vh - 104px + 54px - 16px);\n    display: block;\n}\n\n.h-full .code-table .code-tr td {\n    height: calc(100vh - 183px + 84px) !important;\n}\n\n.h-full .code-table .code-tr td .code-input {\n    max-height: calc(100vh - 183px + 84px) !important;\n}\n\n.h-full .code-table .code-tr td .code-input .CodeMirror {\n    height: calc(100vh - 183px + 84px) !important;\n}\n\n.panel-context {\n    overflow: hidden !important;\n}\n\n.unselectable * {\n    -moz-user-select: -moz-none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.code-tabs td {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\nhtml, body {\n    height: 100%;\n    min-height: 100%;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    padding-top: 64px;\n}\n\n.split-pane-divider {\n    background: #aaa;\n}\n\n.split-pane-component {\n    background: #fff;\n}\n\n.btn-group button {\n    box-shadow: none;\n}\n\n.tree-container {\n    color: #fff;\n    font-size: 16px;\n}\n\n.tree-container .root-title {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    cursor: pointer;\n}\n\n.tree-container .root-tree.active {\n    background: rgba(255, 255, 255, .1);\n    border-radius: 4px;\n}\n\n\n.tree-container .sub .sub-title {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-left: 16px;\n    padding-left: 8px;\n    margin-bottom: 4px;\n    white-space: nowrap;\n    cursor: pointer;\n}\n\n.tree-container .sub .sub-title.active {\n    background: #fff !important;\n    color: rgb(110, 117, 130);\n}\n\n.tree-container .sub .sub-title:hover {\n    background: rgba(255, 255, 255, .1);\n}\n\n.tree-container .root-title:hover {\n    background: rgba(255, 255, 255, .1);\n}\n\nth.text-center {\n    white-space: nowrap;\n}\n\n.tree-container span.namespace {\n    font-size: 14px;\n    color: rgba(255, 255, 255, .6);\n}\n\n.tree-container .sub .sub-title.active span.namespace {\n    color: rgba(0, 0, 0, .6);\n}\n\n","js":"const IS_DEV = wiz.data.IS_DEV;\nconst BRANCH = wiz.data.BRANCH;\nconst BRANCHES = wiz.data.BRANCHES;\nconst TARGET_BRANCH = wiz.data.TARGET_BRANCH;\nconst author = wiz.data.author;\n\nconst LOCALSTORAGEID = \"season.wiz.branch.configuration\";\nlet API_URL = wiz.API.url(\"\");\nAPI_URL = API_URL.substring(0, API_URL.length - 1);\nconst COMMIT_ID = location.hash.split(\"#\")[1] ? location.hash.split(\"#\")[1] : '';\n\nlet wiz_controller = async ($sce, $scope, $timeout) => {\n    _builder($scope, $timeout);\n\n    /*\n     * define variables\n     */\n    let BUILDER = {};\n\n    let API = {\n        handler: (resolve, reject) => async (res) => {\n            if (res.code == 200) resolve(res.data);\n            else reject(res);\n        },\n        diff: () => new Promise((resolve, reject) => {\n            let url = API_URL + '/diff/' + TARGET_BRANCH + \"/\" + COMMIT_ID;\n            $.get(url, API.handler(resolve, reject));\n        }),\n        history: () => new Promise((resolve, reject) => {\n            let url = API_URL + '/history/' + TARGET_BRANCH;\n            $.get(url, API.handler(resolve, reject));\n        }),\n        file: (filepath, commit) => new Promise((resolve, reject) => {\n            if (!commit) commit = \"\";\n            let url = API_URL + '/file/' + TARGET_BRANCH + \"/\" + commit;\n            $.post(url, { filepath: filepath }, API.handler(resolve, reject));\n        }),\n        commit: (message) => new Promise((resolve, reject) => {\n            let url = API_URL + '/commit/' + TARGET_BRANCH;\n            $.post(url, { message: message }, API.handler(resolve, reject));\n        }),\n        update: (data) => new Promise((resolve, reject) => {\n            data = angular.copy(data);\n            let url = API_URL + '/update/' + TARGET_BRANCH;\n            $.post(url, data, API.handler(resolve, reject));\n        }),\n        delete: (data) => new Promise((resolve, reject) => {\n            data = angular.copy(data);\n            let url = API_URL + '/delete/' + TARGET_BRANCH;\n            $.post(url, data, API.handler(resolve, reject));\n        }),\n        timeout: (ts) => new Promise((resolve, reject) => {\n            $timeout(resolve, ts);\n        })\n    };\n\n    /*\n     * define variables of scope\n     */\n    $scope.math = Math;\n    $scope.trustAsHtml = $sce.trustAsHtml;\n    $scope.configuration = {};       // state data for maintaining ui\n    $scope.layout = {};              // controller for layout\n    $scope.workspace = {};           // controller for workspace\n    $scope.loading = {};             // controller for display loading\n    $scope.modal = {};               // controller for modal\n    $scope.plugin = {};              // manage plugins for ui components\n    $scope.commit = {};                 // controller for code editor\n    $scope.history = {};              // controller for code editor\n    $scope.viewer = {};              // controller for code editor\n    $scope.shortcut = {};\n    $scope.socket = {};\n\n    /* \n     * load wiz editor options from localstorage\n     */\n    // try {\n    //     let configuration = JSON.parse(localStorage[LOCALSTORAGEID]);\n    //     try { delete configuration.layout.opts.root.lastComponentSize; } catch (e) { }\n    //     $scope.configuration = configuration;\n    // } catch (e) {\n    //     $scope.configuration = {};\n    //     $scope.configuration.layout_menu_width = 360;\n    // }\n\n    // $scope.$watch(\"configuration\", function () {\n    //     let configuration = angular.copy($scope.configuration);\n    //     localStorage[LOCALSTORAGEID] = JSON.stringify(configuration);\n    // }, true);\n\n\n    /* \n     * layout selector using split pane\n     */\n    BUILDER.layout = async () => {\n        $scope.layout.viewstate = {};\n        $scope.layout.viewstate.root = { firstComponentSize: $scope.configuration.layout_menu_width };\n        $scope.layout.viewstate.horizonal = {};\n        $scope.layout.viewstate.vertical_1_1 = {};\n        $scope.layout.viewstate.vertical_1_2 = {};\n\n        $scope.layout.active_layout = $scope.configuration.layout;\n\n        $scope.$watch(\"layout\", function () {\n            $scope.configuration.layout_menu_width = $scope.layout.viewstate.root.firstComponentSize;\n            $scope.configuration.layout = $scope.layout.active_layout;\n        }, true);\n\n        $scope.layout.change = async (layout) => {\n            $scope.layout.active_layout = layout;\n\n            if (layout == 1) {\n                $scope.layout.accessable_tab = ['tab1'];\n            } else if (layout == 2) {\n                $scope.layout.accessable_tab = ['tab1', 'tab2'];\n            } else if (layout == 3) {\n                $scope.layout.accessable_tab = ['tab1', 'tab2', 'tab3'];\n            } else if (layout == 4) {\n                $scope.layout.accessable_tab = ['tab1'];\n            } else if (layout == 5) {\n                $scope.layout.accessable_tab = ['tab1', 'tab2'];\n            } else if (layout == 6) {\n                $scope.layout.accessable_tab = ['tab1', 'tab2', 'tab3'];\n            }\n\n            let _height = $('#editor-area').height();\n            let _width = $('#editor-area').width();\n\n            function _horizonal_split() {\n                var h = Math.round(_height / 3);\n                if (h > 400) h = 400;\n                $scope.layout.viewstate.horizonal.lastComponentSize = h;\n            }\n\n            function _horizonal_top() {\n                $scope.layout.viewstate.horizonal.lastComponentSize = 0;\n            }\n\n            if (layout == 1) {\n                _horizonal_top();\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = 0;\n            } else if (layout == 2) {\n                _horizonal_top();\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = Math.round(_width / 2);\n                $scope.layout.viewstate.vertical_1_2.lastComponentSize = 0;\n            } else if (layout == 3) {\n                _horizonal_top();\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = Math.round(_width / 3 * 2);\n                $scope.layout.viewstate.vertical_1_2.lastComponentSize = Math.round(_width / 3);\n            } else if (layout == 4) {\n                _horizonal_split();\n                $scope.layout.viewstate.vertical_1_1.firstComponentSize = _width;\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = 0;\n            } else if (layout == 5) {\n                _horizonal_split();\n                $scope.layout.viewstate.vertical_1_1.firstComponentSize = Math.round(_width / 2);\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = Math.round(_width / 2);\n                $scope.layout.viewstate.vertical_1_2.firstComponentSize = Math.round(_width / 2);\n                $scope.layout.viewstate.vertical_1_2.lastComponentSize = 0;\n            } else if (layout == 6) {\n                _horizonal_split();\n                $scope.layout.viewstate.vertical_1_1.firstComponentSize = Math.round(_width / 3);\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = Math.round(_width / 3 * 2);\n                $scope.layout.viewstate.vertical_1_2.firstComponentSize = Math.round(_width / 3);\n                $scope.layout.viewstate.vertical_1_2.lastComponentSize = Math.round(_width / 3);\n            }\n\n            await API.timeout();\n        }\n    }\n\n    /*\n     * define loading\n     */\n    BUILDER.loading = async () => {\n        $scope.loading.status = true;\n        $scope.loading.show = async () => {\n            $scope.loading.status = true;\n            await API.timeout();\n        }\n\n        $scope.loading.hide = async () => {\n            $scope.loading.status = false;\n            await API.timeout();\n        }\n    }\n\n    /*\n     * define modal events\n     */\n\n    BUILDER.modal = async () => {\n        $scope.modal.delete = async () => {\n            $('#modal-delete').modal('show');\n        }\n    }\n\n    /*\n     * define workspace controller\n     */\n\n    BUILDER.workspace = async () => {\n        $scope.workspace.list = [\n            { id: 'commit', name: 'Commit' },\n            { id: 'history', name: 'History' }\n        ];\n\n        $scope.workspace.list[0].active = async () => {\n            $scope.workspace.active_workspace = $scope.workspace.list[0].id;\n            await API.timeout();\n        };\n\n        $scope.workspace.list[1].active = async () => {\n            $scope.workspace.active_workspace = $scope.workspace.list[1].id;\n\n            await API.timeout();\n        };\n\n        $scope.workspace.active_workspace = $scope.workspace.list[0].id;\n    }\n\n    /*\n     * define plugin interfaces for wiz\n     */\n\n    BUILDER.plugin = async () => {\n        $scope.plugin.editor = {};\n        $scope.plugin.editor.build = async (editor) => {\n            let shortcuts = $scope.shortcut.configuration(window.monaco);\n\n            for (let shortcutname in shortcuts) {\n                let monacokey = shortcuts[shortcutname].monaco;\n                let fn = shortcuts[shortcutname].fn;\n                if (!monacokey) continue;\n\n                editor.addCommand(monacokey, async () => {\n                    await fn();\n                    await $scope.shortcut.bind();\n                });\n            }\n        }\n    }\n\n    /*\n     * define commit controller\n     */\n\n    BUILDER.commit = async () => {\n        $scope.commit.load = async () => {\n            $scope.commit.files = await API.diff();\n            await API.timeout();\n        }\n\n        $scope.commit.commit = async (message) => {\n            if (!message) message = 'commit';\n            await API.commit(message);\n            location.reload();\n        }\n\n        $scope.commit.id = COMMIT_ID;\n    };\n\n    BUILDER.history = async () => {\n        $scope.history.load = async () => {\n            $scope.history.data = await API.history();\n            await API.timeout();\n        }\n\n        $scope.history.change = async (item) => {\n            if (item.id == $scope.commit.id) {\n                return;\n            }\n\n            let path = location.pathname + \"#\" + item.id;\n            location.href = path;\n            location.reload();\n        }\n    };\n\n    BUILDER.viewer = async () => {\n        $scope.viewer.editor = {};\n        $scope.viewer.editor.configuration = { enableSplitViewResizing: false, fontSize: 14, readOnly: COMMIT_ID != '', originalEditable: false };\n\n        $scope.viewer.editor.configuration.onLoad = async (editor) => {\n            await $scope.plugin.editor.build(editor);\n        }\n\n        $scope.viewer.load = async (obj) => {\n            if (!obj) return;\n\n            await $scope.loading.show();\n\n            let monaco_data = null;\n\n            try {\n                $scope.viewer.editor.configuration = { enableSplitViewResizing: false, fontSize: 14, readOnly: COMMIT_ID != '', originalEditable: false };\n\n                $scope.viewer.editor.configuration.onLoad = async (editor) => {\n                    await $scope.plugin.editor.build(editor);\n                }\n\n                let next = {};\n                let prev = {};\n\n                try {\n                    next = await API.file(obj.commit_path, obj.commit == 'index' ? null : obj.commit);\n                } catch (e) {\n                }\n\n                try {\n                    prev = await API.file(obj.parent_path, obj.parent == 'index' ? null : obj.parent);\n                } catch (e) {\n                }\n\n                if (next.mode == 'apps') {\n                    next = next.app;\n                    prev = prev.app;\n\n                    $scope.viewer.appdata = { prev: prev, next: next };\n                    $scope.viewer.mode = 'app';\n                    $scope.viewer.codes = ['info', 'controller', 'api', 'socketio', 'html', 'js', 'css', 'dic'];\n                } else if (next.mode == 'routes') {\n                    next = next.app;\n                    prev = prev.app;\n\n                    $scope.viewer.appdata = { prev: prev, next: next };\n                    $scope.viewer.mode = 'route';\n                    $scope.viewer.codes = ['info', 'controller', 'dic'];\n                } else {\n                    $scope.viewer.appdata = null;\n                    $scope.viewer.mode = 'file';\n                    $scope.viewer.codes = [];\n                    monaco_data = {\n                        compare: {\n                            code: prev.text,\n                            language: prev.language\n                        },\n                        main: {\n                            code: next.text,\n                            language: next.language\n                        }\n                    }\n                }\n            } catch (e) {\n                $scope.viewer.editor.configuration = { enableSplitViewResizing: false, fontSize: 14, readOnly: true, originalEditable: false };\n\n                $scope.viewer.editor.configuration.onLoad = async (editor) => {\n                    await $scope.plugin.editor.build(editor);\n                }\n\n                $scope.viewer.appdata = null;\n                $scope.viewer.mode = 'etc';\n                $scope.viewer.codes = [];\n                monaco_data = {\n                    compare: {\n                        code: obj.parent_path,\n                        language: 'text'\n                    },\n                    main: {\n                        code: obj.commit_path,\n                        language: 'text'\n                    }\n                }\n            }\n\n            $scope.viewer.selected = obj;\n\n            await $scope.loading.hide();\n\n            if (monaco_data) {\n                $scope.viewer.editor.data = monaco_data;\n                await API.timeout();\n            } else {\n                await $scope.viewer.change('info');\n            }\n        }\n\n        $scope.viewer.update = async () => {\n            if ($scope.viewer.mode == 'etc') return;\n            let data = angular.copy($scope.viewer.selected);\n            let code = angular.copy($scope.viewer.editor.data.main).code;\n            let path = data.commit_path;\n\n            if ($scope.viewer.mode == 'file') {\n                await API.update({ data: code, path: path });\n                toastr.success(\"Saved\");\n                return;\n            }\n\n            let codemap = {};\n            codemap.info = 'app.json';\n            codemap.controller = 'controller.py';\n            codemap.api = 'api.py';\n            codemap.socketio = 'socketio.py';\n            codemap.html = 'html.dat';\n            codemap.js = 'js.dat';\n            codemap.css = 'css.dat';\n            codemap.dic = 'dic.json';\n\n            if (!codemap[$scope.viewer.code]) {\n                return;\n            }\n\n            path = path + \"/\" + codemap[$scope.viewer.code];\n            await API.update({ data: code, path: path });\n            toastr.success(\"Saved\");\n        }\n\n        $scope.viewer.delete = async () => {\n            if ($scope.viewer.mode == 'etc') return;\n            let data = angular.copy($scope.viewer.selected);\n            let path = data.commit_path;\n            await API.delete({ path: path });\n            toastr.success(\"Deleted\");\n        }\n\n        $scope.viewer.change = async (code) => {\n            if (!$scope.viewer.appdata) return;\n            $scope.viewer.code = code;\n\n            let { next, prev } = angular.copy($scope.viewer.appdata);\n\n            try {\n                next.language = \"json\";\n                if (['controller', 'api', 'socketio'].includes(code)) next.language = \"python\";\n                if ($scope.viewer.mode == 'app') if (next.properties[code]) next.language = next.properties[code];\n                if (next.language == 'json') next[code] = JSON.stringify(JSON.parse(next[code]), null, 4);\n            } catch (e) {\n                next.language = \"text\";\n                next[code] = \"\";\n            }\n\n            try {\n                prev.language = \"json\";\n                if (['controller', 'api', 'socketio'].includes(code)) prev.language = \"python\";\n                if ($scope.viewer.mode == 'app') if (prev.properties[code]) prev.language = prev.properties[code];\n                if (prev.language == 'json') prev[code] = JSON.stringify(JSON.parse(prev[code]), null, 4);\n            } catch (e) {\n                prev.language = \"text\";\n                prev[code] = \"\";\n            }\n\n            $scope.viewer.editor.data = {\n                compare: {\n                    code: prev[code],\n                    language: prev.language\n                },\n                main: {\n                    code: next[code],\n                    language: next.language\n                }\n            }\n\n            await API.timeout();\n        }\n    };\n\n    BUILDER.shortcuts = async () => {\n        $scope.shortcut.configuration = (monaco) => {\n            if (!monaco) monaco = { KeyMod: {}, KeyCode: {} };\n            return {\n                'tab1': {\n                    key: 'Alt Digit1',\n                    monaco: monaco.KeyMod.Alt | monaco.KeyCode.DIGIT1,\n                    fn: async () => {\n                        await $scope.workspace.list[0].active();\n                    }\n                },\n                'tab2': {\n                    key: 'Alt Digit2',\n                    monaco: monaco.KeyMod.Alt | monaco.KeyCode.DIGIT2,\n                    fn: async () => {\n                        await $scope.workspace.list[1].active();\n                    }\n                },\n                'editor_prev': {\n                    monaco: monaco.KeyMod.Alt | monaco.KeyCode.KEY_A,\n                    fn: async () => {\n                        let TABS = angular.copy($scope.viewer.codes);\n                        let prev = TABS.indexOf($scope.viewer.code) - 1;\n                        if (prev < 0) prev = TABS[TABS.length - 1];\n                        else prev = TABS[prev];\n                        await $scope.viewer.change(prev);\n                        await $scope.shortcut.bind();\n                    }\n                },\n                'editor_next': {\n                    monaco: monaco.KeyMod.Alt | monaco.KeyCode.KEY_S,\n                    fn: async () => {\n                        let TABS = angular.copy($scope.viewer.codes);\n                        var next = TABS[(TABS.indexOf($scope.viewer.code) + 1) % TABS.length];\n                        await $scope.viewer.change(next);\n                        await $scope.shortcut.bind();\n                    }\n                },\n                'save': {\n                    key: 'Ctrl KeyS',\n                    monaco: monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S,\n                    fn: async () => {\n                        await $scope.viewer.update();\n                    }\n                }\n            }\n        };\n\n        $scope.shortcut.bind = async () => {\n            $(window).unbind();\n\n            let shortcut_opts = {};\n            let shortcuts = $scope.shortcut.configuration(window.monaco);\n            for (let key in shortcuts) {\n                let keycode = shortcuts[key].key;\n                let fn = shortcuts[key].fn;\n                if (!keycode) continue;\n                shortcut_opts[keycode] = async (ev) => {\n                    ev.preventDefault();\n                    await fn();\n                };\n            }\n\n            shortcutjs(window, shortcut_opts);\n        }\n\n        await $scope.shortcut.bind();\n\n        window.addEventListener(\"focus\", $scope.shortcut.bind, false);\n    }\n\n    BUILDER.layout();\n    BUILDER.plugin();\n    BUILDER.loading();\n    BUILDER.modal();\n    BUILDER.workspace();\n    BUILDER.commit();\n    BUILDER.history();\n    BUILDER.viewer();\n    BUILDER.shortcuts();\n\n    $scope.extdata = {};\n    $scope.extdata.branch = TARGET_BRANCH;\n    $scope.extdata.branches = BRANCHES;\n    $scope.extdata.change_branch = async (branchname) => {\n        location.href = \"/wiz/admin/branch/commit/\" + branchname;\n    }\n\n    await $scope.commit.load();\n    await $scope.history.load();\n    await $scope.loading.hide();\n\n    await API.timeout();\n}\n","html":"div(style=\"width: 100%; height: 100%;\")\n    mixin codearea(tab)\n        div(style=\"overflow: hidden; height: 100%; width: 100%;\" ng-click=\"app.tab.active('{$tab$}')\" ng-if=\"app.editor.viewstate\" ng-cloak)\n            .code-select.bg-dark.d-flex(style=\"margin-top: -2px;\")\n                .btn.btn-square.btn-sm.p-2(ng-repeat=\"code in app.editor.code.list\" ng-click=\"app.editor.code.change('{$tab$}', code.id)\" ng-class=\"configuration.tab.{$tab$}_val == code.id ? 'btn-white' : 'btn-dark'\") {{code.name}}\n\n                select.form-select.form-select-sm.m-1.ml-auto(style=\"width: 120px;\" ng-model=\"app.data.package.properties[configuration.tab.{$tab$}_val]\" ng-if=\"app.editor.codetypes[configuration.tab.{$tab$}_val].length > 0\")\n                    option(ng-repeat=\"code in app.editor.codetypes[configuration.tab.{$tab$}_val]\" value=\"{{code}}\") {{code}}\n                select.form-select.form-select-sm.m-1.mr-0.ml-auto(ng-if=\"configuration.tab.{$tab$}_val == 'dic'\" style=\"width: 60px;\" ng-model=\"configuration.tab.{$tab$}_language\")\n                    option(ng-repeat=\"(key, value) in app.data.dic\" value=\"{{key}}\") {{key}}\n                .btn.btn-square.btn-dark.btn-sm.p-2(ng-if=\"configuration.tab.{$tab$}_val == 'dic'\" ng-click=\"modal.add_language()\")\n                    i.fas.fa-plus\n\n            div(style=\"height: calc(100% - 36px);\")\n                div(ng-if=\"['preview', 'dic'].includes(configuration.tab.{$tab$}_val) == false\" ng-model=\"app.data[configuration.tab.{$tab$}_val]\" ui-monaco-opts=\"app.editor.properties['{$tab$}']\" ui-monaco)\n                div(ng-if=\"configuration.tab.{$tab$}_val == 'dic'\" ng-model=\"app.data[configuration.tab.{$tab$}_val][configuration.tab.{$tab$}_language]\" ui-monaco-opts=\"app.editor.properties['{$tab$}']\" ui-monaco)\n\n                .code-preview(ng-if=\"configuration.tab.{$tab$}_val == 'preview'\" style=\"max-width: none; width: 100%; height: 100%;\")\n                    iframe.preview(style=\"height: 100%;\" ng-show=\"app.preview.status\")\n                    table(ng-if=\"!app.preview.status\" style=\"width: 100%; height: 100%;\")\n                        tr \n                            td(style=\"text-align: center; vertical-align: middle;\")\n                                .spinner-grow.text-dark(style=\"width: 120px; height: 120px;\")\n\n                div(ng-if=\"app.tab.activetab != '{$tab$}' && ['preview'].includes(configuration.tab.{$tab$}_val) == false\" style=\"width: 100%; height: 100%; position: absolute; top: 0; left: 0; background: rgba(0,0,0,.05); z-index: 9999;\")\n\n    .display-none(style=\"display: none;\")\n        input#import-file(type=\"file\" accept=\".json,application/json\")\n\n    .bg-dark.text-center(ng-if=\"loading.status\" style=\"width: 100%; height: 100%; position: absolute; top: 0; left: 0; z-index: 99999; padding-top: 40vh; opacity: .6;\")\n        .spinner-grow.text-white(style=\"width: 60px; height: 60px;\")\n\n    .fixed-top\n        header.navbar.navbar-expand-md.navbar-dark\n            .container(style=\"max-width: none;\")\n                button.navbar-toggler(type='button' data-toggle='collapse' data-target='#navbar-menu')\n                    span.navbar-toggler-icon\n\n                .navbar-brand.navbar-brand-autodark.d-none-navbar-horizontal.pr-0.pr-md-3\n                    table(style='color: #d7e0fd; cursor: pointer;')\n                        tr\n                            td.p-3.pb-0.pt-1.pr-1\n                                img(src='/resources/wiz/plugin/theme/img/wiz-font.png' style='height: 18px; margin-top: 12px;')\n                                img(src='/resources/wiz/plugin/theme/img/logo-sym.png' style='height: 28px; margin-left: 8px;')\n                            td\n                                h3.m-0.p-0(style=\"margin-top: 24px !important;\") Commit\n\n                select.form-control.text-white.mr-2(ng-model=\"extdata.branch\" ng-change=\"extdata.change_branch(extdata.branch)\" style=\"width: 120px;\")\n                    option(ng-repeat=\"branch in extdata.branches\" value=\"{{branch}}\") {{branch}}\n\n                #navbar-menu.navbar.navbar-collapse.collapse\n                    ul.navbar-nav\n                    .navbar-nav.flex-row.order-md-last.mr-2(style=\"align-items: center;\")\n                        li.nav-item.p-0.pr-2(ng-if=\"viewer.mode != 'etc' && viewer.mode && !commit.id\")\n                            a.nav-link.btn.btn-sm.text-dark.btn-white.btn-pill(ng-click=\"viewer.update()\")\n                                span.nav-link-title(style=\"font-size: 14px;\") Save\n\n                        li.nav-item.p-0\n                            a.nav-link.btn.btn-sm.text-dark.btn-white.btn-pill(ng-href='/wiz/admin/branch')\n                                span.nav-link-title.bold(style=\"font-size: 14px;\")\n                                    i.fas.fa-times\n    \n    div(data-split-pane data-split-pane-properties=\"layout.viewstate.root\")\n        .bg-dark(data-split-pane-component data-width=\"320px\")\n            .menu-layout.p-3\n                .btn-group.w-100.mb-3\n                    button.btn(type=\"button\" ng-repeat=\"item in workspace.list\" style=\"width: 50%;\" class=\"{{workspace.active_workspace == item.id ? 'btn-white' : 'btn-dark'}}\" ng-click=\"item.active()\") {{item.name}}\n\n                .tree-container(ng-show=\"workspace.active_workspace == workspace.list[0].id\" style=\"padding-bottom: 300px;\")\n                    h3.text-white.mt-4.text-center(ng-if=\"commit.files.count == 0\") 0 Changed files\n\n                    h3.text-white.mt-2.mb-2(ng-if=\"commit.files.routes.length > 0\") Routes\n\n                    .root-tree.mb-2(ng-repeat=\"item in commit.files.routes\" class=\"{{item == viewer.selected ? 'active' : ''}}\" ng-click=\"viewer.load(item)\")\n                        .root-title\n                            table\n                                tr \n                                    td.w-1.pr-1(style=\"vertical-align: top; font-size: 12px;\")\n                                        i.fas.fa-plus-circle(ng-if=\"item.change_type == 'A'\")\n                                        i.fas.fa-exchange-alt(ng-if=\"item.change_type == 'M'\")\n                                        i.fas.fa-minus-circle(ng-if=\"item.change_type == 'D'\")\n                                        i.fas.fa-arrows-alt(ng-if=\"item.change_type == 'R'\")\n                                        i.fas.fa-minus-circle(ng-if=\"!['A','M','D','R'].includes(item.change_type)\")\n\n                                    td(style=\"line-height: 1;\")\n                                        span {{item.display}}\n                                        br\n                                        span.namespace {{item.commit_path ? item.commit_path : item.parent_path}}\n\n                    .mb-4(ng-if=\"commit.files.routes.length > 0\")\n\n                    h3.text-white.mt-2.mb-2(ng-if=\"commit.files.apps.length > 0\") Apps\n\n                    .root-tree.mb-2(ng-repeat=\"item in commit.files.apps\" class=\"{{item == viewer.selected ? 'active' : ''}}\" ng-click=\"viewer.load(item)\")\n                        .root-title\n                            table\n                                tr \n                                    td.w-1.pr-1(style=\"vertical-align: top; font-size: 12px;\")\n                                        i.fas.fa-plus-circle(ng-if=\"item.change_type == 'A'\")\n                                        i.fas.fa-exchange-alt(ng-if=\"item.change_type == 'M'\")\n                                        i.fas.fa-minus-circle(ng-if=\"item.change_type == 'D'\")\n                                        i.fas.fa-arrows-alt(ng-if=\"item.change_type == 'R'\")\n                                        i.fas.fa-minus-circle(ng-if=\"!['A','M','D','R'].includes(item.change_type)\")\n\n                                    td(style=\"line-height: 1;\")\n                                        span {{item.display}}\n                                        br\n                                        span.namespace {{item.commit_path ? item.commit_path : item.parent_path}}\n\n                    .mb-4(ng-if=\"commit.files.apps.length > 0\")\n\n                    h3.text-white.mt-2.mb-2(ng-if=\"commit.files.files.length > 0\") Files\n\n                    .root-tree.mb-2(ng-repeat=\"item in commit.files.files\" class=\"{{item == viewer.selected ? 'active' : ''}}\" ng-click=\"viewer.load(item)\")\n                        .root-title\n                            table\n                                tr \n                                    td.w-1.pr-1(style=\"vertical-align: top; font-size: 12px;\")\n                                        i.fas.fa-plus-circle(ng-if=\"item.change_type == 'A'\")\n                                        i.fas.fa-exchange-alt(ng-if=\"item.change_type == 'M'\")\n                                        i.fas.fa-minus-circle(ng-if=\"item.change_type == 'D'\")\n                                        i.fas.fa-arrows-alt(ng-if=\"item.change_type == 'R'\")\n                                        i.fas.fa-minus-circle(ng-if=\"!['A','M','D','R'].includes(item.change_type)\")\n\n                                    td(style=\"line-height: 1;\")\n                                        span {{item.display}}\n                                        br\n                                        span.namespace {{item.commit_path ? item.commit_path : item.parent_path}}\n                        \n                    .card.card-sm.mb-0(style=\"position: fixed; left: 0; bottom: 0; width: {{configuration.layout_menu_width}}px; border-radius: 0;\" ng-if=\"commit.files.count > 0 && !commit.id\")\n                        .card-body.text-dark\n                            label.form-label Commit Code\n                            textarea.mb-2.form-control(placeholder='Commit Message' ng-model=\"commit.data.message\" rows=3)\n                            button.btn.btn-dark.btn-block(ng-click=\"commit.commit(commit.data.message)\") Commit\n\n                .tree-container(ng-show=\"workspace.active_workspace == workspace.list[1].id\")\n                    .root-tree.mb-1(ng-click=\"history.change({id: ''})\" class=\"{{'' == commit.id ? 'active' : ''}}\")\n                        .root-title\n                            table\n                                tr \n                                    td.w-1.pr-2.pt-2.pb-2(style=\"vertical-align: top; font-size: 18px;\")\n                                        i.fas.fa-code-branch\n\n                                    td.pt-2.pb-2(style=\"line-height: 1;\")\n                                        span HEAD\n\n                    .root-tree.mb-1(ng-repeat=\"item in history.data\" class=\"{{item.id == commit.id ? 'active' : ''}}\" ng-click=\"history.change(item)\")\n                        .root-title\n                            table\n                                tr \n                                    td.w-1.pr-2.pt-2.pb-2(style=\"vertical-align: top; font-size: 18px;\")\n                                        i.fas.fa-code-branch\n\n                                    td.pt-2.pb-2(style=\"line-height: 1;\")\n                                        span {{ item.message }}\n                                        br\n                                        span.namespace {{item.committer ? item.committer : item.author}} ·\n                                        span.namespace.text-muted.ml-1 {{item.datetime}} ·\n                                        span.namespace.text-muted.ml-1 {{ item.id.substring(0, 8) }}\n                                        \n        div(data-split-pane-divider data-width=\"0px\")\n        \n        #editor-area(data-split-pane-component)\n            div(style=\"width: 100%; height: 100%;\" ng-if=\"!loading.status\")\n                .code-select.bg-dark.d-flex(style=\"margin-top: -2px;\" ng-if=\"viewer.codes.length > 0\")\n                    .btn.btn-square.btn-sm.p-2(ng-repeat=\"code in viewer.codes\" ng-click=\"viewer.change(code)\" ng-class=\"viewer.code == code ? 'btn-white' : 'btn-dark'\") {{code}}\n                    \n                div(style=\"height: {{ viewer.codes.length > 0 ? 'calc(100% - 36px);' : '100%' }}\")\n                    div(ng-model=\"viewer.editor.data\" ui-monaco-opts=\"viewer.editor.configuration\" ui-monaco-diff)\n\n    #modal-delete.modal.fade(tabindex=\"-1\")\n        .modal-dialog.modal-sm(role='document')\n            .modal-content\n                .modal-body\n                    .modal-title Delete\n                    div Once deleted, it cannot be restored. Are you sure you want to delete?\n                .modal-footer\n                    button.btn.btn-link.link-secondary.mr-auto(type='button' data-dismiss='modal') Cancel\n                    button.btn.btn-danger(type='button' ng-click=\"app.delete()\") Delete","api":"import os\nimport season\nimport json\n\nwiz = framework.model(\"wiz\")\n\ndef diff(framework):\n    branch = framework.request.segment.get(0, True)\n    commit_id = framework.request.segment.get(1, \"\")\n    if len(commit_id) == 0: commit_id = None\n    diff = wiz.workspace.diff(branch=branch, commit=commit_id)\n\n    res = dict()\n    res['apps'] = []\n    res['routes'] = []\n    res['files'] = []\n    apps = dict()\n    \n    def parser_app(dif):\n        try:\n            parent_path = dif['parent_path']\n            parent = str(dif['parent'])\n            if parent == \"index\": parent = None\n\n            commit_path = dif['commit_path']\n            commit = str(dif['commit'])\n            if commit == \"index\": commit = None\n\n            try:\n                app_id = commit_path.split(\"/\")[1]\n                category = commit_path.split(\"/\")[0]\n            except:\n                app_id = parent_path.split(\"/\")[1]\n                category = parent_path.split(\"/\")[0]\n            \n            if category not in ['apps', 'routes']:\n                return False\n                \n            display = f\"{category}/{app_id}\"\n\n            change_type = 'M'\n\n            commit_route = None\n            commit_namespace = None\n            try:\n                commit_appinfo = json.loads(wiz.workspace.file(f\"{display}/app.json\", branch=branch, commit=commit))\n                commit_namespace = commit_appinfo['namespace']\n                if 'route' in commit_appinfo: commit_route = commit_appinfo['route']\n            except:\n                commit_appinfo = None\n            \n            parent_route = None\n            parent_namespace = None\n            try:\n                parent_appinfo = json.loads(wiz.workspace.file(f\"{display}/app.json\", branch=branch, commit=parent))\n                parent_namespace = parent_appinfo['namespace']\n                if 'route' in parent_appinfo: parent_route = parent_appinfo['route']\n            except:\n                parent_appinfo = None\n\n            if commit_appinfo is None and parent_appinfo is not None: \n                change_type = 'D'\n            if commit_appinfo is not None and parent_appinfo is None: \n                change_type = 'A'\n            \n            if display not in apps:\n                apps[display] = dict()\n                apps[display]['change_type'] = change_type\n                apps[display]['commit'] = commit\n                apps[display]['parent'] = parent\n                apps[display]['commit_path'] = display\n                apps[display]['parent_path'] = display\n                apps[display]['display'] = display\n                if commit_route is not None: apps[display]['display'] = commit_route\n                elif parent_route is not None: apps[display]['display'] = parent_route\n                elif commit_namespace is not None: apps[display]['display'] = commit_namespace\n                elif parent_namespace is not None: apps[display]['display'] = parent_namespace\n                apps[display]['category'] = category\n                apps[display]['commit_namespace'] = commit_namespace\n                apps[display]['parent_namespace'] = parent_namespace\n            return True\n        except:\n            return False\n                    \n    for i in range(len(diff)):\n        change_type = diff[i]['change_type']\n        parent_path = diff[i]['parent_path']\n        commit_path = diff[i]['commit_path']\n\n        if parent_path is None and commit_path is None:\n            continue\n\n        stat = parser_app(diff[i])\n        if stat:\n            continue\n        \n        diff[i]['display'] = diff[i]['commit_path'].split(\"/\")[-1]\n        res['files'].append(diff[i])\n\n    for app_id in apps:\n        res[apps[app_id]['category']].append(apps[app_id])\n\n    total = 0\n    for key in res:\n        total += len(res[key])\n    \n    res['count'] = total\n    framework.response.status(200, res)\n\ndef commit(framework):\n    branch = framework.request.segment.get(0, True)\n    message = framework.request.query('message', 'commit')\n    wiz.workspace.commit(branch=branch, message=message)\n    framework.response.status(200)\n\ndef update(framework):\n    branch = framework.request.segment.get(0, True)\n    data = framework.request.query('data', '')\n    path = framework.request.query('path', True)\n    fs = wiz.storage(branch=branch)\n    fs.write(path, data)\n    framework.response.status(200)\n\ndef delete(framework):\n    branch = framework.request.segment.get(0, True)\n    path = framework.request.query('path', True)\n    fs = wiz.storage(branch=branch)\n    fs.delete(path)\n    framework.response.status(200)\n\ndef history(framework):\n    branch = framework.request.segment.get(0, True)\n    commits = wiz.workspace.commits(branch=branch, max_count=100)\n    framework.response.status(200, commits)\n\ndef file(framework):\n    branch = framework.request.segment.get(0, True)\n    commit = framework.request.segment.get(1, \"\")\n    filepath = framework.request.query(\"filepath\", True)\n\n    if commit is not None and len(commit) == 0:\n        commit = None\n\n    extmap = framework.config.load(\"wiz\").get(\"supportfiles\", {})\n\n    category = filepath.split(\"/\")[0]\n\n    def load_app_files(key):\n        try:\n            appfile = os.path.join(filepath, key)\n            text = wiz.workspace.file(appfile, branch=branch, commit=commit)\n            return text\n        except:\n            return \"\"\n\n    if category in ['apps', 'routes']:\n        appinfo = dict()\n        try:\n            appinfo = os.path.join(filepath, 'app.json')\n            appinfo = wiz.workspace.file(appinfo, branch=branch, commit=commit)\n            appinfo_txt = appinfo\n            appinfo = json.loads(appinfo)\n            appinfo['info'] = appinfo_txt\n            appinfo[\"controller\"] = load_app_files(\"controller.py\")\n            appinfo[\"dic\"] = load_app_files(\"dic.json\")\n            if category == 'apps':\n                appinfo[\"api\"] = load_app_files(\"api.py\")\n                appinfo[\"socketio\"] = load_app_files(\"socketio.py\")\n                appinfo[\"html\"] = load_app_files(\"html.dat\")\n                appinfo[\"js\"] = load_app_files(\"js.dat\")\n                appinfo[\"css\"] = load_app_files(\"css.dat\")\n        except:\n            pass\n        framework.response.status(200, mode=category, app=appinfo)\n    \n    _, ext = os.path.splitext(filepath)\n    ext = ext.lower()\n    if ext not in extmap:\n        framework.response.status(400)\n\n    language = extmap[ext]\n    text = wiz.workspace.file(filepath, branch=branch, commit=commit)\n    framework.response.status(200, mode=\"text\", text=text, language=language)"},{"dic":{"default":{}},"id":"core.branch.list","name":"/list","compile_html":"on","compile_css":"on","compile_js":"on","html":"div\n    .container.pt-4.pb-4(style=\"max-width: 920px;\")\n        .page-header\n            .row.align-items-center\n                .col-auto\n                    .page-pretitle WIZ Code Flow\n                    h2.page-title Active Branch\n\n                .col-auto.ml-auto.d-print-none\n                    .d-flex\n                        a.btn.btn-light.pr-4.pl-4.ml-2(style=\"width: 140px;\" ng-click=\"modal.create()\") \n                            i.mr-2.fas.fa-code-branch\n                            | Create\n\n        .overflow-x\n            table.table.board-table.table-hover.mb-0\n                thead \n                    tr\n                        th.text-center.width-1\n                        th.text-left.pr-2.pl-2 Branch\n                        th.text-center.width-1.pr-2.pl-2 Author\n                        th.text-center.width-1.pr-2.pl-2\n\n                tbody\n                    tr(ng-repeat=\"item in branch.list\" class=\"{{branch.id == item.name ? 'bg-dark-lt' : ''}}\")\n                        td.text-center.width-1\n                            button.btn.btn-sm(ng-click=\"event.checkout(item.name)\" class=\"{{ branch.id != item.name ? 'btn-light' : 'btn-dark' }}\")\n                                i.fas.fa-check-circle\n\n                        td.text-left.pr-2.pl-2 \n                            span {{item.name}}\n                            span.badge.badge-sm.bg-dark-lt.ml-2(ng-if=\"item.changed\")\n                                i.fas.fa-exchange-alt\n                                span.ml-1 {{item.changed}}\n                        \n                        td.text-center.width-1.pr-2.pl-2\n                            a(href=\"\" ng-click=\"modal.commiter(item)\") {{item.author.name}}\n\n                        td.text-right.width-1.pr-2.pl-2\n                            button.btn.btn-sm.btn-light.ml-1(ng-click=\"modal.delete(item)\" ng-if=\"item.name != branch.id && item.name != 'master'\")\n                                i.fas.fa-history\n                                span.ml-1 archived\n\n                            button.btn.btn-sm.btn-light.ml-1(ng-click=\"modal.merge(item)\")\n                                i.fas.fa-code-branch\n                                span.ml-1 Pull Request\n\n                            a.btn.btn-sm.btn-light.ml-1(ng-href=\"/wiz/admin/branch/commit/{{item.name}}\")\n                                i.fas.fa-code-branch\n                                span.ml-1 Commit\n\n        .page-header.mt-5\n            .row.align-items-center\n                .col-auto\n                    .page-pretitle WIZ Code Flow\n                    h2.page-title Pull Request\n\n        .overflow-x\n            table.table.board-table.table-hover.mb-0\n                thead \n                    tr\n                        th.text-left.pr-2.pl-2 Pull Request\n                        th.text-center.width-1.pr-2.pl-2 Author\n                        th.text-center.width-1.pr-2.pl-2\n\n                tbody\n                    tr(ng-repeat=\"item in branch.pull_request\")\n                        td.text-left.pr-2.pl-2 \n                            span {{item.from}}\n                            i.fas.fa-arrow-alt-circle-right.mr-2.ml-2\n                            span {{item.to}}\n                        td.text-center.width-1.pr-2.pl-2\n                            span {{item.author.name}}\n                        td.text-right.width-1.pr-2.pl-2\n                            button.btn.btn-sm.btn-light.ml-1(ng-click=\"modal.delete(item)\" ng-if=\"item.name != branch.id && item.name != 'master'\")\n                                i.fas.fa-trash\n                                span.ml-1 Delete\n                            a.btn.btn-sm.btn-light.ml-1(ng-href=\"/wiz/admin/branch/merge/{{item.from}}/{{item.to}}\")\n                                i.fas.fa-code-branch\n                                span.ml-1 Merge\n\n        .page-header.mt-5\n            .row.align-items-center\n                .col-auto\n                    .page-pretitle WIZ Code Flow\n                    h2.page-title Stale Branch\n\n        .overflow-x\n            table.table.board-table.table-hover.mb-0\n                thead \n                    tr\n                        th.text-center.width-1\n                        th.text-left.pr-2.pl-2 Branch\n                        th.text-center.width-1.pr-2.pl-2\n\n                tbody\n                    tr(ng-repeat=\"item in branch.stale\")\n                        td.text-center.width-1\n                            button.btn.btn-sm(ng-click=\"event.checkout(item.name)\" class=\"{{ branch.id != item.name ? 'btn-light' : 'btn-dark' }}\")\n                                i.fas.fa-check-circle\n                        td.text-left.pr-2.pl-2 \n                            span {{item.name}}\n                        td.text-right.width-1.pr-2.pl-2\n                            button.btn.btn-sm.btn-light.ml-1(ng-click=\"modal.delete(item)\" ng-if=\"item.name != branch.id && item.name != 'master'\")\n                                i.fas.fa-trash\n                                span.ml-1 Delete\n\n    #modal-delete.modal.fade(tabindex=\"-1\")\n        .modal-dialog.modal-sm(role='document')\n            .modal-content\n                .modal-body\n                    .modal-title(ng-if=\"modal.data.delete.working\") Archived active branch\n                    .modal-title(ng-if=\"!modal.data.delete.working\") Delete\n                    div Once deleted, it cannot be restored. Are you sure you want to delete?\n                .modal-footer\n                    button.btn.btn-link.link-secondary.mr-auto(type='button' data-dismiss='modal') Cancel\n                    button.btn.btn-danger(type='button' ng-click=\"event.delete()\" ng-if=\"modal.data.delete.working\") Archived\n                    button.btn.btn-danger(type='button' ng-click=\"event.delete()\" ng-if=\"!modal.data.delete.working\") Delete  \n\n    #modal-merge-branch.modal.fade(tabindex=\"-1\")\n        .modal-dialog(role='document')\n            .modal-content\n                .modal-body\n                    .modal-title Merge Branch\n                    .row.mb-4 \n                        .col-md-5\n                            select.form-select(ng-model=\"modal.data.merge.branch\")\n                                option(value=\"\" ng-if=\"!modal.data.merge.branch\") select branch\n                                option(ng-repeat=\"b in branch.list\" value=\"{{b.name}}\") {{b.name}}\n                        .col-md-2.text-center \n                            i.fas.fa-arrow-alt-circle-right\n                        .col-md-5\n                            select.form-select(ng-model=\"modal.data.merge.base_branch\")\n                                option(value=\"\" ng-if=\"!modal.data.merge.base_branch\") select branch\n                                option(ng-repeat=\"b in branch.list\" value=\"{{b.name}}\") {{b.name}}\n                        \n                    .modal-title Author Name\n                    div.mb-4\n                        input.form-control(type=\"text\" ng-model=\"modal.data.merge.name\" placeholder=\"Author Name\")\n                    \n                    .modal-title Author Email\n                    div \n                        input.form-control(type=\"email\" ng-model=\"modal.data.merge.email\" placeholder=\"Author Email\")\n                    \n                .modal-footer\n                    button.btn.btn-link.link-secondary.mr-auto(type='button' data-dismiss='modal') Cancel\n                    button.btn.btn-dark(type='button' ng-click=\"event.pull_request(modal.data.merge.branch, modal.data.merge.base_branch)\") Pull Request\n\n    #modal-new-branch.modal.fade(tabindex=\"-1\")\n        .modal-dialog.modal-sm(role='document')\n            .modal-content\n                .modal-body\n                    .modal-title Branch Name\n                    div.mb-4\n                        input.form-control(type=\"text\" ng-model=\"modal.data.create.branchname\" placeholder=\"Branch Name\")\n                    \n                    .modal-title Base Branch\n                    div.mb-4\n                        select.form-select(ng-model=\"modal.data.create.base_branch\")\n                            option(value=\"\" ng-if=\"!modal.data.create.base_branch\") select branch\n                            option(ng-repeat=\"b in branch.list\" value=\"{{b.name}}\") {{b.name}}\n\n                    .modal-title Author Name\n                    div.mb-4\n                        input.form-control(type=\"text\" ng-model=\"modal.data.create.name\" placeholder=\"Author Name\")\n                    \n                    .modal-title Author Email\n                    div \n                        input.form-control(type=\"email\" ng-model=\"modal.data.create.email\" placeholder=\"Author Email\")\n                    \n                .modal-footer\n                    button.btn.btn-link.link-secondary.mr-auto(type='button' data-dismiss='modal') Cancel\n                    button.btn.btn-dark(type='button' ng-click=\"event.create(modal.data.create.branchname, modal.data.create.base_branch)\") Create\n\n    #modal-change-commiter.modal.fade(tabindex=\"-1\")\n        .modal-dialog.modal-sm(role='document')\n            .modal-content\n                .modal-body\n                    .modal-title Branch\n                    div.mb-4\n                        select.form-select(ng-model=\"modal.data.commiter.branch\")\n                            option(value=\"\" ng-if=\"!modal.data.commiter.branch\") select branch\n                            option(ng-repeat=\"b in branch.list\" value=\"{{b.name}}\") {{b.name}}\n\n                    .modal-title Author Name\n                    div.mb-4\n                        input.form-control(type=\"text\" ng-model=\"modal.data.commiter.name\" placeholder=\"Author Name\")\n                    \n                    .modal-title Author Email\n                    div \n                        input.form-control(type=\"email\" ng-model=\"modal.data.commiter.email\" placeholder=\"Author Email\")\n                    \n                .modal-footer\n                    button.btn.btn-link.link-secondary.mr-auto(type='button' data-dismiss='modal') Cancel\n                    button.btn.btn-dark(type='button' ng-click=\"event.change_commiter(modal.data.commiter.branch)\") Change\n\n    .bg-dark.text-center(ng-if=\"loading\" style=\"width: 100vw; height: 100vh; position: absolute; top: 0; left: 0; z-index: 99999; opacity: .6; padding-top: 40vh;\")\n        .spinner-grow.text-white(style=\"width: 60px; height: 60px;\")","controller":"wiz = framework.model(\"wiz\")\nkwargs['author'] = wiz.workspace.author()\nkwargs['BRANCH'] = wiz.workspace.branch()\nkwargs['BRANCHES'] = wiz.workspace.branches()","js":"const BRANCH = wiz.data.BRANCH;\nconst BRANCHES = wiz.data.BRANCHES;\nconst author = wiz.data.author;\n\nlet wiz_controller = async ($sce, $scope, $timeout) => {\n    let API_URL = wiz.API.url(\"\");\n    API_URL = API_URL.substring(0, API_URL.length - 1);\n\n    let API = {\n        list: () => new Promise((resolve, reject) => {\n            let url = wiz.API.url(\"list\");\n            $.get(url, function (res) {\n                if (res.code == 200) resolve(res.data);\n                else reject(res);\n            });\n        }),\n        checkout: (data) => new Promise((resolve) => {\n            let url = wiz.API.url(\"create\");\n            data = angular.copy(data);\n            $.post(url, data, function (res) {\n                resolve(res);\n            });\n        }),\n        pull_request: (data) => new Promise((resolve) => {\n            let url = wiz.API.url(\"pull_request\");\n            data = angular.copy(data);\n            $.post(url, data, function (res) {\n                resolve(res);\n            });\n        }),\n        delete: (branch, working) => new Promise((resolve) => {\n            let url = wiz.API.url(\"delete\");\n            $.post(url, { branch: branch, remote: !working }, function (res) {\n                resolve(res);\n            });\n        }),\n        delete_request: (branch, base) => new Promise((resolve) => {\n            let url = wiz.API.url(\"delete_request\");\n            $.post(url, { branch: branch, base_branch: base }, function (res) {\n                resolve(res);\n            });\n        }),\n        timeout: (ts) => new Promise((resolve) => {\n            $timeout(resolve, ts);\n        })\n    };\n\n    $scope.loading = true;\n\n    $scope.branch = {};\n    $scope.branch.id = BRANCH;\n\n    let branches = await API.list();\n    $scope.branch.list = branches.active;\n    $scope.branch.stale = branches.stale;\n    $scope.branch.pull_request = branches.pull_request;\n\n    $scope.modal = {};\n    $scope.modal.data = {};\n    $scope.modal.create = async () => {\n        $scope.modal.data.create = {};\n        $scope.modal.data.create.base_branch = BRANCH;\n        $scope.modal.data.create.name = author.name;\n        $scope.modal.data.create.email = author.email;\n        $('#modal-new-branch').modal('show');\n    }\n\n    $scope.modal.commiter = async (item) => {\n        console.log(item);\n        $scope.modal.data.commiter = {};\n        $scope.modal.data.commiter.branch = item.name;\n        $scope.modal.data.commiter.name = item.author.name;\n        $scope.modal.data.commiter.email = item.author.email;\n        $('#modal-change-commiter').modal('show');\n    }\n\n    $scope.modal.merge = async (item) => {\n        $scope.modal.data.merge = {};\n        $scope.modal.data.merge.branch = item.name;\n        $scope.modal.data.merge.name = item.author.name;\n        $scope.modal.data.merge.email = item.author.email;\n        $('#modal-merge-branch').modal('show');\n    }\n\n    $scope.modal.delete = async (item) => {\n        $scope.modal.data.delete = item;\n        $('#modal-delete').modal('show');\n    }\n\n    $scope.event = {};\n\n    $scope.event.create = async (branch, base) => {\n        if (!branch || !base) return toastr.error(\"Branch name at least 2 char\");\n        if (branch.length < 2) return toastr.error(\"Branch name at least 2 char\");\n        $scope.loading = true;\n        $scope.modal.data.create.branch = branch;\n        $scope.modal.data.create.base_branch = base;\n        let create = angular.copy($scope.modal.data.create);\n        await API.timeout();\n        let res = await API.checkout(create);\n        if (res.code != 200) {\n            $scope.loading = false;\n            await API.timeout();\n            return toastr.error(res.data);\n        }\n        location.reload();\n    }\n\n    $scope.event.pull_request = async (branch, base) => {\n        if (!branch || !base) return toastr.error(\"Branch not selected\");\n        if (branch == base) return toastr.error(\"Select different branch\");\n        $scope.loading = true;\n        $scope.modal.data.merge.branch = branch;\n        $scope.modal.data.merge.base_branch = base;\n        let merge = angular.copy($scope.modal.data.merge);\n        await API.timeout();\n        let res = await API.pull_request(merge);\n        if (res.code != 200) {\n            $scope.loading = false;\n            await API.timeout();\n            return toastr.error(res.data);\n        }\n        location.reload();\n    }\n\n\n    $scope.event.checkout = async (branch) => {\n        $scope.loading = true;\n        let checkout_object = {};\n        checkout_object.branch = branch;\n        await API.timeout();\n        let res = await API.checkout(checkout_object);\n        if (res.code != 200) {\n            $scope.loading = false;\n            await API.timeout();\n            return toastr.error(res.data);\n        }\n        location.reload();\n    }\n\n    $scope.event.change_commiter = async (branch) => {\n        $scope.loading = true;\n        $scope.modal.data.commiter.branch = branch;\n        let create = angular.copy($scope.modal.data.commiter);\n        await API.timeout();\n        let res = await API.checkout(create);\n        if (res.code != 200) {\n            $scope.loading = false;\n            await API.timeout();\n            return toastr.error(res.data);\n        }\n        location.reload();\n    }\n\n\n    $scope.event.delete = async () => {\n        if ($scope.modal.data.delete.from) {\n            let branch = $scope.modal.data.delete.from;\n            let base_branch = $scope.modal.data.delete.to;\n            $scope.loading = true;\n            await API.timeout();\n            await API.delete_request(branch, base_branch);\n        } else {\n            let branch = $scope.modal.data.delete.name;\n            let working = $scope.modal.data.delete.working;\n            $scope.loading = true;\n            await API.timeout();\n            await API.delete(branch, working);\n        }\n\n        location.reload();\n    }\n\n    $scope.loading = false;\n    await API.timeout();\n}","api":"import season\nimport json\nfrom werkzeug.exceptions import HTTPException\n\nwiz = framework.model(\"wiz\")\n\ndef create(framework):\n    branch = framework.request.query(\"branch\", True)\n    base = framework.request.query(\"base_branch\", \"master\")\n\n    allowed = \"qwertyuiopasdfghjklzxcvbnm-1234567890\"\n    for ns in branch:\n        if ns not in allowed:\n            raise Exception(f\"only alphabet and number and -, _ in branch name\")\n    for ns in base:\n        if ns not in allowed:\n            raise Exception(f\"only alphabet and number and -, _ in branch name\")\n\n    blocked = ['copy', 'ref', 'commit', 'branch', 'delete', 'cache']\n    if branch in blocked:\n        raise Exception(f\"blocked keyword `{branch}` for branch name\")\n\n    name = framework.request.query(\"name\", None)\n    email = framework.request.query(\"email\", None)\n\n    wiz.workspace.checkout(branch=branch, base_branch=base, name=name, email=email, reload=True)\n    framework.response.cookies.set(\"season-wiz-branch\", branch)\n    framework.response.status(200, True)\n\ndef delete(framework):\n    branch = framework.request.query(\"branch\", True)\n    remote = framework.request.query(\"remote\", True)\n    if remote == 'true': remote = True\n    else: remote = False\n    wiz.workspace.delete(branch, remote)\n    framework.response.status(200, True)\n\ndef list(framework):\n    branches = wiz.workspace.branches(working=True, git=True, status=True)\n    active_branch = []\n    stale_branch = []\n    \n    for i in range(len(branches)):\n        if branches[i]['working']:\n            try:\n                branches[i]['changed'] = wiz.workspace.changed(branches[i]['name'])\n            except:\n                pass\n            try:\n                branches[i]['author'] = wiz.workspace.author(branches[i]['name'])\n            except:\n                pass\n            active_branch.append(branches[i])\n        else:\n            stale_branch.append(branches[i])\n        \n    merge = wiz.workspace.merge()\n    pull_request = merge.branches()\n    for i in range(len(pull_request)):\n        try:\n            merge.checkout(pull_request[i]['from'], pull_request[i]['to'])\n            pull_request[i]['author'] = merge.author()\n        except:\n            pass\n    \n    framework.response.status(200, active=active_branch, stale=stale_branch, pull_request=pull_request)\n\ndef pull_request(framework):\n    branch = framework.request.query(\"branch\", True)\n    base = framework.request.query(\"base_branch\", True)\n    name = framework.request.query(\"name\", None)\n    email = framework.request.query(\"email\", None)\n\n    fs = framework.model(\"wizfs\").use(f\"wiz/merge\")\n    if fs.isdir(f\"{branch}_{base}\"):\n        framework.response.status(500, \"merge request on working. please delete previous work.\")    \n\n    # branch: source branch, base_branch: apply changed\n    wiz.workspace.merge().checkout(branch, base, name=name, email=email)\n\n    framework.response.status(200, True)\n\ndef delete_request(framework):\n    branch = framework.request.query(\"branch\", True)\n    base = framework.request.query(\"base_branch\", True)\n    merge = wiz.workspace.merge().checkout(branch, base)\n    merge.delete()\n    framework.response.status(200, True)"},{"dic":{"default":{}},"id":"core.branch.merge","name":"/merge","compile_html":"on","compile_css":"off","compile_js":"on","css":".main-header {\n    .container {\n        margin: 0 auto;\n        max-width: 720px;\n        padding-top: 88px;\n        padding-bottom: 96px;\n        color: white;\n    }\n\n    .subtitle {\n        font-size: 24px;\n        color: rgba(255, 255, 255, .6);\n    }\n\n    .title {\n        font-size: 40px;\n    }\n\n    .input-group {\n        .form-control {\n            border: 0;\n            // border-radius: 0;\n            padding: 16px;\n            font-size: 16px;\n            color: black;\n        }\n\n        .btn {\n            border: 0;\n            box-shadow: none;\n            border-radius: 0;\n            background: #ff922b;\n            color: white;\n            font-size: 20px;\n        }\n    }\n\n    .icon-menu {\n        padding: 18px 0;\n        color: white;\n\n        &:hover {\n            cursor: pointer;\n            background-color: #ff922b;\n        }\n\n        .main-icon {\n            height: 80px;\n\n        }\n\n        img {\n            width: 80px;\n            height: 80px;\n        }\n    }\n}\n\n.card {\n\n    h2,\n    h3 {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n}\n\n.card-hover:hover {\n    background: rgba(255, 146, 43, .2);\n    cursor: pointer;\n}\n\n.card-statistic {\n    img {\n        margin-top: 12px;\n        margin-bottom: 12px;\n        width: 36px;\n        height: 36px;\n    }\n}\n\n.page {\n    background: white;\n}\n\n@media all and (min-width:721px) {}\n\n.container {\n    max-width: 960px;\n}\n\n\n.filetree {\n    .title {\n        cursor: pointer;\n    }\n\n    .title:hover {\n        background: rgba(255, 255, 255, .1);\n    }\n\n    .title.active {\n        background: rgba(255, 255, 255, .2);\n    }\n\n    .sub {\n        padding-left: 16px;\n    }\n}\n\n@media (min-width:769px) {\n    html, body {\n        overflow: hidden;\n    }\n    .panel-layout {\n        padding-top: 64px;\n    }\n    .panel-layout .panel-menu {\n        position: fixed;\n        width: 360px;\n        height: 100%;\n        top: 0;\n        left: 0;\n        padding-top: 64px;\n        overflow: auto;\n        z-index: 1001;\n    }\n    .panel-layout .panel-submenu {\n        position: fixed;\n        width: 0;\n        height: 100%;\n        top: 0;\n        left: 360px;\n        padding-top: 64px;\n        overflow: auto;\n        z-index: 1001;\n    }\n    .panel-layout .panel-context {\n        padding-left: 360px;\n        height: 100%;\n    }\n    .fixed-top#top-nav .container-xl {\n        max-width: none;\n    }\n    /* side menu off */\n    .sidemenu-off .panel-menu {\n        width: 76px;\n    }\n    .sidemenu-off .panel-menu .menu-layout {\n        padding: 0 !important;\n    }\n    .sidemenu-off .panel-menu h3 {\n        text-align: center;\n    }\n    .sidemenu-off .panel-menu h3 i {\n        padding: 16px !important;\n    }\n    .sidemenu-off .panel-menu .minify {\n        display: none;\n    }\n    .sidemenu-off .panel-menu .layout-selector {\n        padding: 4px !important;\n    }\n    .sidemenu-off .button-container {\n        padding: 0 8px;\n    }\n    .sidemenu-off .panel-context {\n        padding-left: 76px;\n        height: 100%;\n    }\n}\n\n.layout-icon {\n    display: inline-table;\n    width: 60px;\n    height: 60px;\n    border: 2px solid #ffffff;\n    border-radius: 10%;\n}\n\n.layout-icon .layout-row, .layout-icon .layout-column {\n    height: 60px;\n}\n\n.layout-icon.rows-2 .layout-row, .layout-icon.rows-2 .layout-column {\n    height: 30px;\n}\n\n.layout-icon .layout-row {\n    display: table-row;\n}\n\n.layout-icon .layout-row .layout-column {\n    border-bottom: 2px solid #ffffff;\n}\n\n.layout-icon .layout-row:last-child .layout-column {\n    border-bottom-color: transparent;\n}\n\n.layout-icon .layout-column {\n    display: table-cell;\n    border-right: 2px solid #ffffff;\n}\n\n.layout-icon .layout-column:last-child {\n    border-right-color: transparent;\n}\n\n.layout-selector {\n    display: inline-block;\n    line-height: 0;\n    border-radius: 10%;\n    cursor: pointer;\n}\n\n.layout-selector:hover, .layout-selector.active {\n    background: #ffffff;\n}\n\n.layout-selector:hover .layout-icon, .layout-selector.active .layout-icon {\n    border-color: #354052;\n}\n\n.layout-selector:hover .layout-icon .layout-row, .layout-selector.active .layout-icon .layout-row {\n    display: table-row;\n}\n\n.layout-selector:hover .layout-icon .layout-row .layout-column, .layout-selector.active .layout-icon .layout-row .layout-column {\n    border-bottom: 2px solid #354052;\n}\n\n.layout-selector:hover .layout-icon .layout-row:last-child .layout-column, .layout-selector.active .layout-icon .layout-row:last-child .layout-column {\n    border-bottom-color: transparent;\n}\n\n.layout-selector:hover .layout-icon .layout-column, .layout-selector.active .layout-icon .layout-column {\n    display: table-cell;\n    border-right: 2px solid #354052;\n}\n\n.layout-selector:hover .layout-icon .layout-column:last-child, .layout-selector.active .layout-icon .layout-column:last-child {\n    border-right-color: transparent;\n}\n\n.code-tabs tr, .code-tabs td {\n    border: none;\n    padding: 0;\n}\n\n.fixed-top#top-nav .container-xl {\n    max-width: none;\n}\n\n.code-table {\n    table-layout: fixed;\n}\n\n.code-table td {\n    /* border-right: 1px solid rgba(110, 117, 130, .2); */\n}\n\n.code-table td.gutter {\n    width: 1px;\n    background: rgba(110, 117, 130, .2);\n    cursor: col-resize;\n}\n\n.code-table tr.gutter {\n    width: 1px;\n    background: rgba(110, 117, 130, .2);\n    cursor: row-resize;\n}\n\n.code-table .code-tr td {\n    height: calc(50vh - 104px + 54px - 15px);\n    overflow: hidden;\n    vertical-align: top;\n}\n\n.code-table .code-tr td .code-input {\n    height: calc(50vh - 104px + 54px - 16px);\n    overflow: hidden;\n}\n\n.code-table .code-tr td .code-input .CodeMirror {\n    height: calc(50vh - 104px + 54px - 16px);\n    display: block;\n}\n\n.h-full .code-table .code-tr td {\n    height: calc(100vh - 183px + 84px) !important;\n}\n\n.h-full .code-table .code-tr td .code-input {\n    max-height: calc(100vh - 183px + 84px) !important;\n}\n\n.h-full .code-table .code-tr td .code-input .CodeMirror {\n    height: calc(100vh - 183px + 84px) !important;\n}\n\n.panel-context {\n    overflow: hidden !important;\n}\n\n.unselectable * {\n    -moz-user-select: -moz-none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.code-tabs td {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\nhtml, body {\n    height: 100%;\n    min-height: 100%;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    padding-top: 64px;\n}\n\n.split-pane-divider {\n    background: #aaa;\n}\n\n.split-pane-component {\n    background: #fff;\n}\n\n.btn-group button {\n    box-shadow: none;\n}\n\n.tree-container {\n    color: #fff;\n    font-size: 16px;\n}\n\n.tree-container .root-title {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    cursor: pointer;\n}\n\n.tree-container .root-tree.active {\n    background: rgba(255, 255, 255, .1);\n    border-radius: 4px;\n}\n\n\n.tree-container .sub .sub-title {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-left: 16px;\n    padding-left: 8px;\n    margin-bottom: 4px;\n    white-space: nowrap;\n    cursor: pointer;\n}\n\n.tree-container .sub .sub-title.active {\n    background: #fff !important;\n    color: rgb(110, 117, 130);\n}\n\n.tree-container .sub .sub-title:hover {\n    background: rgba(255, 255, 255, .1);\n}\n\n.tree-container .root-title:hover {\n    background: rgba(255, 255, 255, .1);\n}\n\nth.text-center {\n    white-space: nowrap;\n}\n\n.tree-container span.namespace {\n    font-size: 14px;\n    color: rgba(255, 255, 255, .6);\n}\n\n.tree-container .sub .sub-title.active span.namespace {\n    color: rgba(0, 0, 0, .6);\n}\n\n","api":"import os\nimport season\nimport json\n\nwiz = framework.model(\"wiz\")\n\ndef diff(framework):\n    branch = framework.request.segment.get(0, True)\n    branch = branch.split(\"_\")\n    base_branch = branch[1]\n    branch = branch[0]\n\n    merge = wiz.workspace.merge().checkout(branch, base_branch)\n    diff = merge.diff()\n\n    res = dict()\n    res['apps'] = []\n    res['routes'] = []\n    res['files'] = []\n    apps = dict()\n    \n    def parser_app(dif):\n        try:\n            parent_path = dif['parent_path']\n            parent = str(dif['parent'])\n            if parent == \"index\": parent = None\n\n            commit_path = dif['commit_path']\n            commit = str(dif['commit'])\n            if commit == \"index\": commit = None\n\n            try:\n                app_id = commit_path.split(\"/\")[1]\n                category = commit_path.split(\"/\")[0]\n            except:\n                app_id = parent_path.split(\"/\")[1]\n                category = parent_path.split(\"/\")[0]\n            \n            if category not in ['apps', 'routes']:\n                return False\n                \n            display = f\"{category}/{app_id}\"\n\n            change_type = 'M'\n\n            commit_route = None\n            commit_namespace = None\n            try:\n                commit_appinfo = json.loads(merge.file(f\"{display}/app.json\"))\n                commit_namespace = commit_appinfo['namespace']\n                if 'route' in commit_appinfo: commit_route = commit_appinfo['route']\n            except:\n                commit_appinfo = None\n            \n            parent_route = None\n            parent_namespace = None\n            try:\n                parent_appinfo = merge.file(f\"{display}/app.json\", commit=parent)\n                parent_appinfo = json.loads(parent_appinfo)\n                parent_namespace = parent_appinfo['namespace']\n                if 'route' in parent_appinfo: parent_route = parent_appinfo['route']\n            except Exception as e:\n                parent_appinfo = None\n\n            if commit_appinfo is None and parent_appinfo is not None: \n                change_type = 'D'\n            if commit_appinfo is not None and parent_appinfo is None: \n                change_type = 'A'\n\n            if display not in apps:\n                apps[display] = dict()\n                apps[display]['change_type'] = change_type\n                apps[display]['commit'] = commit\n                apps[display]['parent'] = parent\n                apps[display]['commit_path'] = display\n                apps[display]['parent_path'] = display\n                apps[display]['display'] = display\n                if commit_route is not None: apps[display]['display'] = commit_route\n                elif parent_route is not None: apps[display]['display'] = parent_route\n                elif commit_namespace is not None: apps[display]['display'] = commit_namespace\n                elif parent_namespace is not None: apps[display]['display'] = parent_namespace\n                apps[display]['category'] = category\n                apps[display]['commit_namespace'] = commit_namespace\n                apps[display]['parent_namespace'] = parent_namespace\n            return True\n        except Exception as e:\n            return False\n                    \n    for i in range(len(diff)):\n        change_type = diff[i]['change_type']\n        parent_path = diff[i]['parent_path']\n        commit_path = diff[i]['commit_path']\n\n        if parent_path is None and commit_path is None:\n            continue\n\n        stat = parser_app(diff[i])\n        if stat:\n            continue\n        \n        diff[i]['display'] = diff[i]['commit_path'].split(\"/\")[-1]\n        res['files'].append(diff[i])\n\n    for app_id in apps:\n        res[apps[app_id]['category']].append(apps[app_id])\n\n    total = 0\n    for key in res:\n        total += len(res[key])\n    \n    res['count'] = total\n    \n    framework.response.status(200, res)\n\ndef push(framework):\n    branch = framework.request.segment.get(0, True)\n    branch = branch.split(\"_\")\n    base_branch = branch[1]\n    branch = branch[0]\n    merge = wiz.workspace.merge().checkout(branch, base_branch)\n    merge.git().push()\n    merge.delete()\n    framework.response.status(200)\n\ndef commit(framework):\n    branch = framework.request.segment.get(0, True)\n    branch = branch.split(\"_\")\n    base_branch = branch[1]\n    branch = branch[0]\n    merge = wiz.workspace.merge().checkout(branch, base_branch)\n    message = framework.request.query('message', f'Merge branch `{branch}` into `{base_branch}`')\n    if len(message) == 0:\n        message = f'Merge branch `{branch}` into `{base_branch}`'\n    merge.commit(message=message)\n    merge.delete()\n    framework.response.status(200)\n\ndef update(framework):\n    branch = framework.request.segment.get(0, True)\n    data = framework.request.query('data', '')\n    path = framework.request.query('path', True)\n    fs = framework.model(\"wizfs\").use(f\"wiz/merge/{branch}\")\n    fs.write(path, data)\n    framework.response.status(200)\n\ndef delete(framework):\n    branch = framework.request.segment.get(0, True)\n    data = framework.request.query('data', '')\n    path = framework.request.query('path', True)\n    fs = framework.model(\"wizfs\").use(f\"wiz/merge/{branch}\")\n    fs.delete(path)\n    framework.response.status(200)\n\ndef file(framework):\n    branch = framework.request.segment.get(0, True)\n    commit = framework.request.segment.get(1, \"\")\n    filepath = framework.request.query(\"filepath\", True)\n\n    branch = branch.split(\"_\")\n    base_branch = branch[1]\n    branch = branch[0]\n\n    merge = wiz.workspace.merge().checkout(branch, base_branch)\n\n    if commit is not None and len(commit) == 0:\n        commit = None\n\n    extmap = framework.config.load(\"wiz\").get(\"supportfiles\", {})\n\n    category = filepath.split(\"/\")[0]\n\n    def load_app_files(key):\n        try:\n            appfile = os.path.join(filepath, key)\n            text = merge.file(appfile, commit=commit)\n            return text\n        except:\n            return \"\"\n\n    if category in ['apps', 'routes']:\n        appinfo = dict()\n        try:\n            appinfo = os.path.join(filepath, 'app.json')\n            appinfo = merge.file(appinfo, commit=commit)\n            appinfo_txt = appinfo\n            appinfo = json.loads(appinfo)\n            appinfo['info'] = appinfo_txt\n            appinfo[\"controller\"] = load_app_files(\"controller.py\")\n            appinfo[\"dic\"] = load_app_files(\"dic.json\")\n            if category == 'apps':\n                appinfo[\"api\"] = load_app_files(\"api.py\")\n                appinfo[\"socketio\"] = load_app_files(\"socketio.py\")\n                appinfo[\"html\"] = load_app_files(\"html.dat\")\n                appinfo[\"js\"] = load_app_files(\"js.dat\")\n                appinfo[\"css\"] = load_app_files(\"css.dat\")\n        except:\n            pass\n        framework.response.status(200, mode=category, app=appinfo)\n    \n    _, ext = os.path.splitext(filepath)\n    ext = ext.lower()\n    if ext not in extmap:\n        framework.response.status(400)\n\n    language = extmap[ext]\n    text = merge.file(filepath, commit=commit)\n    framework.response.status(200, mode=\"text\", text=text, language=language)","html":"div(style=\"width: 100%; height: 100%;\")\n    mixin codearea(tab)\n        div(style=\"overflow: hidden; height: 100%; width: 100%;\" ng-click=\"app.tab.active('{$tab$}')\" ng-if=\"app.editor.viewstate\" ng-cloak)\n            .code-select.bg-dark.d-flex(style=\"margin-top: -2px;\")\n                .btn.btn-square.btn-sm.p-2(ng-repeat=\"code in app.editor.code.list\" ng-click=\"app.editor.code.change('{$tab$}', code.id)\" ng-class=\"configuration.tab.{$tab$}_val == code.id ? 'btn-white' : 'btn-dark'\") {{code.name}}\n\n                select.form-select.form-select-sm.m-1.ml-auto(style=\"width: 120px;\" ng-model=\"app.data.package.properties[configuration.tab.{$tab$}_val]\" ng-if=\"app.editor.codetypes[configuration.tab.{$tab$}_val].length > 0\")\n                    option(ng-repeat=\"code in app.editor.codetypes[configuration.tab.{$tab$}_val]\" value=\"{{code}}\") {{code}}\n                select.form-select.form-select-sm.m-1.mr-0.ml-auto(ng-if=\"configuration.tab.{$tab$}_val == 'dic'\" style=\"width: 60px;\" ng-model=\"configuration.tab.{$tab$}_language\")\n                    option(ng-repeat=\"(key, value) in app.data.dic\" value=\"{{key}}\") {{key}}\n                .btn.btn-square.btn-dark.btn-sm.p-2(ng-if=\"configuration.tab.{$tab$}_val == 'dic'\" ng-click=\"modal.add_language()\")\n                    i.fas.fa-plus\n\n            div(style=\"height: calc(100% - 36px);\")\n                div(ng-if=\"['preview', 'dic'].includes(configuration.tab.{$tab$}_val) == false\" ng-model=\"app.data[configuration.tab.{$tab$}_val]\" ui-monaco-opts=\"app.editor.properties['{$tab$}']\" ui-monaco)\n                div(ng-if=\"configuration.tab.{$tab$}_val == 'dic'\" ng-model=\"app.data[configuration.tab.{$tab$}_val][configuration.tab.{$tab$}_language]\" ui-monaco-opts=\"app.editor.properties['{$tab$}']\" ui-monaco)\n\n                .code-preview(ng-if=\"configuration.tab.{$tab$}_val == 'preview'\" style=\"max-width: none; width: 100%; height: 100%;\")\n                    iframe.preview(style=\"height: 100%;\" ng-show=\"app.preview.status\")\n                    table(ng-if=\"!app.preview.status\" style=\"width: 100%; height: 100%;\")\n                        tr \n                            td(style=\"text-align: center; vertical-align: middle;\")\n                                .spinner-grow.text-dark(style=\"width: 120px; height: 120px;\")\n\n                div(ng-if=\"app.tab.activetab != '{$tab$}' && ['preview'].includes(configuration.tab.{$tab$}_val) == false\" style=\"width: 100%; height: 100%; position: absolute; top: 0; left: 0; background: rgba(0,0,0,.05); z-index: 9999;\")\n\n    .display-none(style=\"display: none;\")\n        input#import-file(type=\"file\" accept=\".json,application/json\")\n\n    .bg-dark.text-center(ng-if=\"loading.status\" style=\"width: 100%; height: 100%; position: absolute; top: 0; left: 0; z-index: 99999; padding-top: 40vh; opacity: .6;\")\n        .spinner-grow.text-white(style=\"width: 60px; height: 60px;\")\n\n    .fixed-top\n        header.navbar.navbar-expand-md.navbar-dark\n            .container(style=\"max-width: none;\")\n                button.navbar-toggler(type='button' data-toggle='collapse' data-target='#navbar-menu')\n                    span.navbar-toggler-icon\n\n                .navbar-brand.navbar-brand-autodark.d-none-navbar-horizontal.pr-0.pr-md-3\n                    table(style='color: #d7e0fd; cursor: pointer;')\n                        tr\n                            td.p-3.pb-0.pt-1.pr-1\n                                img(src='/resources/wiz/plugin/theme/img/wiz-font.png' style='height: 18px; margin-top: 12px;')\n                                img(src='/resources/wiz/plugin/theme/img/logo-sym.png' style='height: 28px; margin-left: 8px;')\n                            td\n                                h3.m-0.p-0(style=\"margin-top: 24px !important;\") Merge\n\n                #navbar-menu.navbar.navbar-collapse.collapse\n                    ul.navbar-nav\n                    .navbar-nav.flex-row.order-md-last.mr-2(style=\"align-items: center;\")\n                        li.nav-item.p-0.pr-2(ng-if=\"viewer.mode != 'etc' && viewer.mode && !commit.id && viewer.selected.change_type != 'D'\")\n                            a.nav-link.btn.btn-sm.text-dark.btn-white.btn-pill(ng-click=\"modal.delete()\")\n                                span.nav-link-title(style=\"font-size: 14px;\") Delete\n\n                        li.nav-item.p-0.pr-2(ng-if=\"viewer.mode != 'etc' && viewer.mode && !commit.id\")\n                            a.nav-link.btn.btn-sm.text-dark.btn-white.btn-pill(ng-click=\"viewer.update()\")\n                                span.nav-link-title(style=\"font-size: 14px;\") Save\n\n                        li.nav-item.p-0\n                            a.nav-link.btn.btn-sm.text-dark.btn-white.btn-pill(ng-href='/wiz/admin/branch')\n                                span.nav-link-title.bold(style=\"font-size: 14px;\")\n                                    i.fas.fa-times\n    \n    div(data-split-pane data-split-pane-properties=\"layout.viewstate.root\")\n        .bg-dark(data-split-pane-component data-width=\"320px\" style=\"height: calc(100vh - 236px);\")\n            .menu-layout.p-3\n                .tree-container(ng-show=\"workspace.active_workspace == workspace.list[0].id\" style=\"padding-bottom: 60px;\")\n                    h3.text-white.mt-4.text-center(ng-if=\"commit.files.count == 0\") No conflicts\n\n                    h3.text-white.mt-2.mb-2(ng-if=\"commit.files.routes.length > 0\") Routes\n\n                    .root-tree.mb-2(ng-repeat=\"item in commit.files.routes\" class=\"{{item == viewer.selected ? 'active' : ''}}\" ng-click=\"viewer.load(item)\")\n                        .root-title\n                            table\n                                tr \n                                    td.w-1.pr-1(style=\"vertical-align: top; font-size: 12px;\")\n                                        i.fas.fa-plus-circle(ng-if=\"item.change_type == 'A'\")\n                                        i.fas.fa-exchange-alt(ng-if=\"item.change_type == 'M'\")\n                                        i.fas.fa-minus-circle(ng-if=\"item.change_type == 'D'\")\n                                        i.fas.fa-arrows-alt(ng-if=\"item.change_type == 'R'\")\n                                        i.fas.fa-minus-circle(ng-if=\"!['A','M','D','R'].includes(item.change_type)\")\n\n                                    td(style=\"line-height: 1;\")\n                                        span {{item.display}}\n                                        br\n                                        span.namespace {{item.commit_path ? item.commit_path : item.parent_path}}\n\n                    .mb-4(ng-if=\"commit.files.routes.length > 0\")\n\n                    h3.text-white.mt-2.mb-2(ng-if=\"commit.files.apps.length > 0\") Apps\n\n                    .root-tree.mb-2(ng-repeat=\"item in commit.files.apps\" class=\"{{item == viewer.selected ? 'active' : ''}}\" ng-click=\"viewer.load(item)\")\n                        .root-title\n                            table\n                                tr \n                                    td.w-1.pr-1(style=\"vertical-align: top; font-size: 12px;\")\n                                        i.fas.fa-plus-circle(ng-if=\"item.change_type == 'A'\")\n                                        i.fas.fa-exchange-alt(ng-if=\"item.change_type == 'M'\")\n                                        i.fas.fa-minus-circle(ng-if=\"item.change_type == 'D'\")\n                                        i.fas.fa-arrows-alt(ng-if=\"item.change_type == 'R'\")\n                                        i.fas.fa-minus-circle(ng-if=\"!['A','M','D','R'].includes(item.change_type)\")\n\n                                    td(style=\"line-height: 1;\")\n                                        span {{item.display}}\n                                        br\n                                        span.namespace {{item.commit_path ? item.commit_path : item.parent_path}}\n\n                    .mb-4(ng-if=\"commit.files.apps.length > 0\")\n\n                    h3.text-white.mt-2.mb-2(ng-if=\"commit.files.files.length > 0\") Files\n\n                    .root-tree.mb-2(ng-repeat=\"item in commit.files.files\" class=\"{{item == viewer.selected ? 'active' : ''}}\" ng-click=\"viewer.load(item)\")\n                        .root-title\n                            table\n                                tr \n                                    td.w-1.pr-1(style=\"vertical-align: top; font-size: 12px;\")\n                                        i.fas.fa-plus-circle(ng-if=\"item.change_type == 'A'\")\n                                        i.fas.fa-exchange-alt(ng-if=\"item.change_type == 'M'\")\n                                        i.fas.fa-minus-circle(ng-if=\"item.change_type == 'D'\")\n                                        i.fas.fa-arrows-alt(ng-if=\"item.change_type == 'R'\")\n                                        i.fas.fa-minus-circle(ng-if=\"!['A','M','D','R'].includes(item.change_type)\")\n\n                                    td(style=\"line-height: 1;\")\n                                        span {{item.display}}\n                                        br\n                                        span.namespace {{item.commit_path ? item.commit_path : item.parent_path}}\n                        \n                    .card.card-sm.mb-0(style=\"position: fixed; left: 0; bottom: 0; width: {{configuration.layout_menu_width}}px; border-radius: 0;\" ng-if=\"commit.files.count > 0 && !commit.id\")\n                        .card-body.text-dark\n                            label.form-label Merge Request\n                            textarea.mb-2.form-control(placeholder='Commit Message' ng-model=\"commit.data.message\" rows=3)\n                            button.btn.btn-dark.btn-block(ng-click=\"commit.commit(commit.data.message)\") Merge\n                    \n                    .card.card-sm.mb-0(style=\"height: 176px; position: fixed; left: 0; bottom: 0; width: {{configuration.layout_menu_width}}px; border-radius: 0;\" ng-if=\"!(commit.files.count > 0 && !commit.id)\")\n                        .card-body.text-dark.pt-5\n                            label.form-label Merge Request\n                            button.btn.btn-dark.btn-block(ng-click=\"commit.push()\") Merge\n\n        div(data-split-pane-divider data-width=\"0px\")\n        \n        #editor-area(data-split-pane-component)\n            div(style=\"width: 100%; height: 100%;\" ng-if=\"!loading.status\")\n                .code-select.bg-dark.d-flex(style=\"margin-top: -2px;\" ng-if=\"viewer.codes.length > 0\")\n                    .btn.btn-square.btn-sm.p-2(ng-repeat=\"code in viewer.codes\" ng-click=\"viewer.change(code)\" ng-class=\"viewer.code == code ? 'btn-white' : 'btn-dark'\") {{code}}\n                    \n                div(style=\"height: {{ viewer.codes.length > 0 ? 'calc(100% - 36px);' : '100%' }}\")\n                    div(ng-model=\"viewer.editor.data\" ui-monaco-opts=\"viewer.editor.configuration\" ui-monaco-diff)\n\n    #modal-delete.modal.fade(tabindex=\"-1\")\n        .modal-dialog.modal-sm(role='document')\n            .modal-content\n                .modal-body\n                    .modal-title Delete\n                    div Once deleted, it cannot be restored. Are you sure you want to delete?\n                .modal-footer\n                    button.btn.btn-link.link-secondary.mr-auto(type='button' data-dismiss='modal') Cancel\n                    button.btn.btn-danger(type='button' ng-click=\"viewer.delete()\") Delete\n","js":"const IS_DEV = wiz.data.IS_DEV;\nconst BRANCH = wiz.data.BRANCH;\nconst BRANCHES = wiz.data.BRANCHES;\nconst TARGET_BRANCH = wiz.data.TARGET_BRANCH;\nconst author = wiz.data.author;\n\nconst LOCALSTORAGEID = \"season.wiz.branch.configuration\";\nlet API_URL = wiz.API.url(\"\");\nAPI_URL = API_URL.substring(0, API_URL.length - 1);\nconst COMMIT_ID = location.hash.split(\"#\")[1] ? location.hash.split(\"#\")[1] : '';\n\nlet wiz_controller = async ($sce, $scope, $timeout) => {\n    _builder($scope, $timeout);\n\n    /*\n     * define variables\n     */\n    let BUILDER = {};\n\n    let API = {\n        handler: (resolve, reject) => async (res) => {\n            if (res.code == 200) resolve(res.data);\n            else reject(res);\n        },\n        diff: () => new Promise((resolve, reject) => {\n            let url = API_URL + '/diff/' + TARGET_BRANCH + \"/\" + COMMIT_ID;\n            $.get(url, API.handler(resolve, reject));\n        }),\n        file: (filepath, commit) => new Promise((resolve, reject) => {\n            if (!commit) commit = \"\";\n            let url = API_URL + '/file/' + TARGET_BRANCH + \"/\" + commit;\n            $.post(url, { filepath: filepath }, API.handler(resolve, reject));\n        }),\n        commit: (message) => new Promise((resolve, reject) => {\n            let url = API_URL + '/commit/' + TARGET_BRANCH;\n            $.post(url, { message: message }, API.handler(resolve, reject));\n        }),\n        push: () => new Promise((resolve, reject) => {\n            let url = API_URL + '/push/' + TARGET_BRANCH;\n            $.post(url, {}, API.handler(resolve, reject));\n        }),\n        update: (data) => new Promise((resolve, reject) => {\n            data = angular.copy(data);\n            let url = API_URL + '/update/' + TARGET_BRANCH;\n            $.post(url, data, API.handler(resolve, reject));\n        }),\n        delete: (data) => new Promise((resolve, reject) => {\n            data = angular.copy(data);\n            let url = API_URL + '/delete/' + TARGET_BRANCH;\n            $.post(url, data, API.handler(resolve, reject));\n        }),\n        timeout: (ts) => new Promise((resolve, reject) => {\n            $timeout(resolve, ts);\n        })\n    };\n\n    /*\n     * define variables of scope\n     */\n    $scope.math = Math;\n    $scope.trustAsHtml = $sce.trustAsHtml;\n    $scope.configuration = {};       // state data for maintaining ui\n    $scope.layout = {};              // controller for layout\n    $scope.workspace = {};           // controller for workspace\n    $scope.loading = {};             // controller for display loading\n    $scope.modal = {};               // controller for modal\n    $scope.plugin = {};              // manage plugins for ui components\n    $scope.commit = {};                 // controller for code editor\n    $scope.viewer = {};              // controller for code editor\n    $scope.shortcut = {};\n    $scope.socket = {};\n\n    /* \n     * load wiz editor options from localstorage\n     */\n    // try {\n    //     let configuration = JSON.parse(localStorage[LOCALSTORAGEID]);\n    //     try { delete configuration.layout.opts.root.lastComponentSize; } catch (e) { }\n    //     $scope.configuration = configuration;\n    // } catch (e) {\n    //     $scope.configuration = {};\n    //     $scope.configuration.layout_menu_width = 360;\n    // }\n\n    // $scope.$watch(\"configuration\", function () {\n    //     let configuration = angular.copy($scope.configuration);\n    //     localStorage[LOCALSTORAGEID] = JSON.stringify(configuration);\n    // }, true);\n\n\n    /* \n     * layout selector using split pane\n     */\n    BUILDER.layout = async () => {\n        $scope.layout.viewstate = {};\n        $scope.layout.viewstate.root = { firstComponentSize: $scope.configuration.layout_menu_width };\n        $scope.layout.viewstate.horizonal = {};\n        $scope.layout.viewstate.vertical_1_1 = {};\n        $scope.layout.viewstate.vertical_1_2 = {};\n\n        $scope.layout.active_layout = $scope.configuration.layout;\n\n        $scope.$watch(\"layout\", function () {\n            $scope.configuration.layout_menu_width = $scope.layout.viewstate.root.firstComponentSize;\n            $scope.configuration.layout = $scope.layout.active_layout;\n        }, true);\n\n        $scope.layout.change = async (layout) => {\n            $scope.layout.active_layout = layout;\n\n            if (layout == 1) {\n                $scope.layout.accessable_tab = ['tab1'];\n            } else if (layout == 2) {\n                $scope.layout.accessable_tab = ['tab1', 'tab2'];\n            } else if (layout == 3) {\n                $scope.layout.accessable_tab = ['tab1', 'tab2', 'tab3'];\n            } else if (layout == 4) {\n                $scope.layout.accessable_tab = ['tab1'];\n            } else if (layout == 5) {\n                $scope.layout.accessable_tab = ['tab1', 'tab2'];\n            } else if (layout == 6) {\n                $scope.layout.accessable_tab = ['tab1', 'tab2', 'tab3'];\n            }\n\n            let _height = $('#editor-area').height();\n            let _width = $('#editor-area').width();\n\n            function _horizonal_split() {\n                var h = Math.round(_height / 3);\n                if (h > 400) h = 400;\n                $scope.layout.viewstate.horizonal.lastComponentSize = h;\n            }\n\n            function _horizonal_top() {\n                $scope.layout.viewstate.horizonal.lastComponentSize = 0;\n            }\n\n            if (layout == 1) {\n                _horizonal_top();\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = 0;\n            } else if (layout == 2) {\n                _horizonal_top();\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = Math.round(_width / 2);\n                $scope.layout.viewstate.vertical_1_2.lastComponentSize = 0;\n            } else if (layout == 3) {\n                _horizonal_top();\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = Math.round(_width / 3 * 2);\n                $scope.layout.viewstate.vertical_1_2.lastComponentSize = Math.round(_width / 3);\n            } else if (layout == 4) {\n                _horizonal_split();\n                $scope.layout.viewstate.vertical_1_1.firstComponentSize = _width;\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = 0;\n            } else if (layout == 5) {\n                _horizonal_split();\n                $scope.layout.viewstate.vertical_1_1.firstComponentSize = Math.round(_width / 2);\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = Math.round(_width / 2);\n                $scope.layout.viewstate.vertical_1_2.firstComponentSize = Math.round(_width / 2);\n                $scope.layout.viewstate.vertical_1_2.lastComponentSize = 0;\n            } else if (layout == 6) {\n                _horizonal_split();\n                $scope.layout.viewstate.vertical_1_1.firstComponentSize = Math.round(_width / 3);\n                $scope.layout.viewstate.vertical_1_1.lastComponentSize = Math.round(_width / 3 * 2);\n                $scope.layout.viewstate.vertical_1_2.firstComponentSize = Math.round(_width / 3);\n                $scope.layout.viewstate.vertical_1_2.lastComponentSize = Math.round(_width / 3);\n            }\n\n            await API.timeout();\n        }\n    }\n\n    /*\n     * define loading\n     */\n    BUILDER.loading = async () => {\n        $scope.loading.status = true;\n        $scope.loading.show = async () => {\n            $scope.loading.status = true;\n            await API.timeout();\n        }\n\n        $scope.loading.hide = async () => {\n            $scope.loading.status = false;\n            await API.timeout();\n        }\n    }\n\n    /*\n     * define modal events\n     */\n\n    BUILDER.modal = async () => {\n        $scope.modal.delete = async () => {\n            $('#modal-delete').modal('show');\n        }\n    }\n\n    /*\n     * define workspace controller\n     */\n\n    BUILDER.workspace = async () => {\n        $scope.workspace.list = [\n            { id: 'commit', name: 'Commit' }\n        ];\n\n        $scope.workspace.list[0].active = async () => {\n            $scope.workspace.active_workspace = $scope.workspace.list[0].id;\n            await API.timeout();\n        };\n\n        $scope.workspace.active_workspace = $scope.workspace.list[0].id;\n    }\n\n    /*\n     * define plugin interfaces for wiz\n     */\n\n    BUILDER.plugin = async () => {\n        $scope.plugin.editor = {};\n        $scope.plugin.editor.build = async (editor) => {\n            let shortcuts = $scope.shortcut.configuration(window.monaco);\n\n            for (let shortcutname in shortcuts) {\n                let monacokey = shortcuts[shortcutname].monaco;\n                let fn = shortcuts[shortcutname].fn;\n                if (!monacokey) continue;\n\n                editor.addCommand(monacokey, async () => {\n                    await fn();\n                    await $scope.shortcut.bind();\n                });\n            }\n        }\n    }\n\n    /*\n     * define commit controller\n     */\n\n    BUILDER.commit = async () => {\n        $scope.commit.load = async () => {\n            $scope.commit.files = await API.diff();\n            await API.timeout();\n        }\n\n        $scope.commit.commit = async (message) => {\n            if (!message) message = null;\n            await API.commit(message);\n            location.reload();\n        }\n\n        $scope.commit.push = async () => {\n            await API.push();\n            location.reload();\n        }\n\n        $scope.commit.id = COMMIT_ID;\n    };\n\n    BUILDER.viewer = async () => {\n        $scope.viewer.editor = {};\n        $scope.viewer.editor.configuration = { enableSplitViewResizing: false, fontSize: 14, readOnly: COMMIT_ID != '', originalEditable: false };\n\n        $scope.viewer.editor.configuration.onLoad = async (editor) => {\n            await $scope.plugin.editor.build(editor);\n        }\n\n        $scope.viewer.load = async (obj) => {\n            if (!obj) return;\n\n            await $scope.loading.show();\n\n            let monaco_data = null;\n\n            try {\n                $scope.viewer.editor.configuration = { enableSplitViewResizing: false, fontSize: 14, readOnly: COMMIT_ID != '', originalEditable: false };\n\n                $scope.viewer.editor.configuration.onLoad = async (editor) => {\n                    await $scope.plugin.editor.build(editor);\n                }\n\n                let next = {};\n                let prev = {};\n\n                try {\n                    next = await API.file(obj.commit_path, obj.commit == 'index' ? null : obj.commit);\n                } catch (e) {\n                }\n\n                try {\n                    prev = await API.file(obj.parent_path, obj.parent == 'index' ? null : obj.parent);\n                } catch (e) {\n                }\n\n                if (next.mode == 'apps') {\n                    next = next.app;\n                    prev = prev.app;\n\n                    $scope.viewer.appdata = { prev: prev, next: next };\n                    $scope.viewer.mode = 'app';\n                    $scope.viewer.codes = ['info', 'controller', 'api', 'socketio', 'html', 'js', 'css', 'dic'];\n                } else if (next.mode == 'routes') {\n                    next = next.app;\n                    prev = prev.app;\n\n                    $scope.viewer.appdata = { prev: prev, next: next };\n                    $scope.viewer.mode = 'route';\n                    $scope.viewer.codes = ['info', 'controller', 'dic'];\n                } else {\n                    $scope.viewer.appdata = null;\n                    $scope.viewer.mode = 'file';\n                    $scope.viewer.codes = [];\n                    monaco_data = {\n                        compare: {\n                            code: prev.text,\n                            language: prev.language\n                        },\n                        main: {\n                            code: next.text,\n                            language: next.language\n                        }\n                    }\n                }\n            } catch (e) {\n                $scope.viewer.editor.configuration = { enableSplitViewResizing: false, fontSize: 14, readOnly: true, originalEditable: false };\n\n                $scope.viewer.editor.configuration.onLoad = async (editor) => {\n                    await $scope.plugin.editor.build(editor);\n                }\n\n                $scope.viewer.appdata = null;\n                $scope.viewer.mode = 'etc';\n                $scope.viewer.codes = [];\n                monaco_data = {\n                    compare: {\n                        code: obj.parent_path,\n                        language: 'text'\n                    },\n                    main: {\n                        code: obj.commit_path,\n                        language: 'text'\n                    }\n                }\n            }\n\n            $scope.viewer.selected = obj;\n\n            await $scope.loading.hide();\n\n            if (monaco_data) {\n                $scope.viewer.editor.data = monaco_data;\n                await API.timeout();\n            } else {\n                await $scope.viewer.change('info');\n            }\n        }\n\n        $scope.viewer.update = async () => {\n            if ($scope.viewer.mode == 'etc') return;\n            let data = angular.copy($scope.viewer.selected);\n            let code = angular.copy($scope.viewer.editor.data.main).code;\n            let path = data.commit_path;\n\n            if ($scope.viewer.mode == 'file') {\n                await API.update({ data: code, path: path });\n                toastr.success(\"Saved\");\n                return;\n            }\n\n            let codemap = {};\n            codemap.info = 'app.json';\n            codemap.controller = 'controller.py';\n            codemap.api = 'api.py';\n            codemap.socketio = 'socketio.py';\n            codemap.html = 'html.dat';\n            codemap.js = 'js.dat';\n            codemap.css = 'css.dat';\n            codemap.dic = 'dic.json';\n\n            if (!codemap[$scope.viewer.code]) {\n                return;\n            }\n\n            path = path + \"/\" + codemap[$scope.viewer.code];\n            await API.update({ data: code, path: path });\n            toastr.success(\"Saved\");\n\n            $scope.viewer.load($scope.viewer.selected);\n        }\n\n        $scope.viewer.delete = async () => {\n            if ($scope.viewer.mode == 'etc') return;\n            let data = angular.copy($scope.viewer.selected);\n            let path = data.commit_path;\n            await API.delete({ path: path });\n            location.href = \"/wiz/admin/branch\";\n        }\n\n        $scope.viewer.change = async (code) => {\n            if (!$scope.viewer.appdata) return;\n            $scope.viewer.code = code;\n\n            let { next, prev } = angular.copy($scope.viewer.appdata);\n\n            try {\n                next.language = \"json\";\n                if (['controller', 'api', 'socketio'].includes(code)) next.language = \"python\";\n                if ($scope.viewer.mode == 'app') if (next.properties[code]) next.language = next.properties[code];\n                if (next.language == 'json') next[code] = JSON.stringify(JSON.parse(next[code]), null, 4);\n            } catch (e) {\n                next.language = \"text\";\n                next[code] = \"\";\n            }\n\n            try {\n                prev.language = \"json\";\n                if (['controller', 'api', 'socketio'].includes(code)) prev.language = \"python\";\n                if ($scope.viewer.mode == 'app') if (prev.properties[code]) prev.language = prev.properties[code];\n                if (prev.language == 'json') prev[code] = JSON.stringify(JSON.parse(prev[code]), null, 4);\n            } catch (e) {\n                prev.language = \"text\";\n                prev[code] = \"\";\n            }\n\n            $scope.viewer.editor.data = {\n                compare: {\n                    code: prev[code],\n                    language: prev.language\n                },\n                main: {\n                    code: next[code],\n                    language: next.language\n                }\n            }\n\n            await API.timeout();\n        }\n    };\n\n    BUILDER.shortcuts = async () => {\n        $scope.shortcut.configuration = (monaco) => {\n            if (!monaco) monaco = { KeyMod: {}, KeyCode: {} };\n            return {\n                'tab1': {\n                    key: 'Alt Digit1',\n                    monaco: monaco.KeyMod.Alt | monaco.KeyCode.DIGIT1,\n                    fn: async () => {\n                        await $scope.workspace.list[0].active();\n                    }\n                },\n                'tab2': {\n                    key: 'Alt Digit2',\n                    monaco: monaco.KeyMod.Alt | monaco.KeyCode.DIGIT2,\n                    fn: async () => {\n                        await $scope.workspace.list[1].active();\n                    }\n                },\n                'editor_prev': {\n                    monaco: monaco.KeyMod.Alt | monaco.KeyCode.KEY_A,\n                    fn: async () => {\n                        let TABS = angular.copy($scope.viewer.codes);\n                        let prev = TABS.indexOf($scope.viewer.code) - 1;\n                        if (prev < 0) prev = TABS[TABS.length - 1];\n                        else prev = TABS[prev];\n                        await $scope.viewer.change(prev);\n                        await $scope.shortcut.bind();\n                    }\n                },\n                'editor_next': {\n                    monaco: monaco.KeyMod.Alt | monaco.KeyCode.KEY_S,\n                    fn: async () => {\n                        let TABS = angular.copy($scope.viewer.codes);\n                        var next = TABS[(TABS.indexOf($scope.viewer.code) + 1) % TABS.length];\n                        await $scope.viewer.change(next);\n                        await $scope.shortcut.bind();\n                    }\n                },\n                'save': {\n                    key: 'Ctrl KeyS',\n                    monaco: monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S,\n                    fn: async () => {\n                        await $scope.viewer.update();\n                    }\n                }\n            }\n        };\n\n        $scope.shortcut.bind = async () => {\n            $(window).unbind();\n\n            let shortcut_opts = {};\n            let shortcuts = $scope.shortcut.configuration(window.monaco);\n            for (let key in shortcuts) {\n                let keycode = shortcuts[key].key;\n                let fn = shortcuts[key].fn;\n                if (!keycode) continue;\n                shortcut_opts[keycode] = async (ev) => {\n                    ev.preventDefault();\n                    await fn();\n                };\n            }\n\n            shortcutjs(window, shortcut_opts);\n        }\n\n        await $scope.shortcut.bind();\n\n        window.addEventListener(\"focus\", $scope.shortcut.bind, false);\n    }\n\n    BUILDER.layout();\n    BUILDER.plugin();\n    BUILDER.loading();\n    BUILDER.modal();\n    BUILDER.workspace();\n    BUILDER.commit();\n    BUILDER.viewer();\n    BUILDER.shortcuts();\n\n    $scope.extdata = {};\n    $scope.extdata.branch = TARGET_BRANCH;\n    $scope.extdata.branches = BRANCHES;\n    $scope.extdata.change_branch = async (branchname) => {\n        location.href = \"/wiz/admin/branch/commit/diff/\" + branchname;\n    }\n\n    await $scope.commit.load();\n    await $scope.loading.hide();\n\n    await API.timeout();\n}","controller":"wiz = framework.model(\"wiz\")\n\nmerge = wiz.workspace.merge()\nactive_branches = merge.branches()\nbranch = framework.request.segment.branch\nbase_branch = framework.request.segment.base_branch\nactive_branches = [h['from'] + \"_\" + h['to'] for h in active_branches]\nmerge_path = branch + \"_\" + base_branch\n\nif merge_path not in active_branches:\n    framework.response.redirect(\"/wiz/admin/branch\")\n\nmerge.checkout(branch, base_branch)\nauthor = merge.author()\n\nkwargs['IS_DEV'] = wiz.is_dev()\nkwargs['author'] = author\nkwargs['BRANCH'] = branch\nkwargs['BRANCHES'] = wiz.workspace.branches()\nkwargs['TARGET_BRANCH'] = merge_path"}]